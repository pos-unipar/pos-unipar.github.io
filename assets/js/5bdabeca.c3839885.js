"use strict";(self.webpackChunkpos_unipar=self.webpackChunkpos_unipar||[]).push([[2309],{3905:function(e,a,n){n.d(a,{Zo:function(){return u},kt:function(){return d}});var t=n(67294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},u=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,b=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?t.createElement(b,i(i({ref:a},u),{},{components:n})):t.createElement(b,i({ref:a},u))}));function d(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5025:function(e,a,n){n.r(a),n.d(a,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var t=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={slug:"34",title:"#34 - Ruby on Rails",authors:"LucasEliasBaccan",tags:["blog","unipar","17/09/2022","09/2022","2022","mauricio","presencial","ruby","rails","ruby o rails"]},s=void 0,p={permalink:"/blog/34",editUrl:"https://github.com/pos-unipar/pos-unipar.github.io/edit/master/blog/2022-09-17-aula-34.md",source:"@site/blog/2022-09-17-aula-34.md",title:"#34 - Ruby on Rails",description:"17/09/2022 - Aula 1 de Ruby (Presencial)",date:"2022-09-17T00:00:00.000Z",formattedDate:"September 17, 2022",tags:[{label:"blog",permalink:"/blog/tags/blog"},{label:"unipar",permalink:"/blog/tags/unipar"},{label:"17/09/2022",permalink:"/blog/tags/17-09-2022"},{label:"09/2022",permalink:"/blog/tags/09-2022"},{label:"2022",permalink:"/blog/tags/2022"},{label:"mauricio",permalink:"/blog/tags/mauricio"},{label:"presencial",permalink:"/blog/tags/presencial"},{label:"ruby",permalink:"/blog/tags/ruby"},{label:"rails",permalink:"/blog/tags/rails"},{label:"ruby o rails",permalink:"/blog/tags/ruby-o-rails"}],readingTime:4.105,hasTruncateMarker:!1,authors:[{name:"Lucas Elias Baccan",url:"https://github.com/lucasbaccan",imageURL:"https://avatars.githubusercontent.com/u/2676484?s=400&v=4",key:"LucasEliasBaccan"}],frontMatter:{slug:"34",title:"#34 - Ruby on Rails",authors:"LucasEliasBaccan",tags:["blog","unipar","17/09/2022","09/2022","2022","mauricio","presencial","ruby","rails","ruby o rails"]},nextItem:{title:"#33 - DevOps",permalink:"/blog/33"}},u={authorsImageUrls:[void 0]},m=[{value:"Criando um projeto Ruby",id:"criando-um-projeto-ruby",level:2}],c={toc:m};function d(e){var a=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"17/09/2022 - Aula 1 de Ruby")," (Presencial)"),(0,o.kt)("p",null,"A primeira aula de Ruby, o professor ",(0,o.kt)("a",{parentName:"p",href:"/professores/mauricio"},"Mauricio")," come\xe7ou a aula falando sobre o que \xe9 Ruby, e como ele \xe9 uma linguagem de programa\xe7\xe3o de alto n\xedvel, interpretada, orientada a objetos, imperativa, funcional e reflexiva. Tamb\xe9m falou que o Ruby n\xe3o \xe9 a linguagem mais , mas que tem um desenvolvimento extremamente r\xe1pido."),(0,o.kt)("p",null,"O Ruby \xe9 uma linguagem que utiliza um terminal interativo, chamado de ",(0,o.kt)("a",{parentName:"p",href:"https://pt.wikipedia.org/wiki/Interactive_Ruby_Shell"},"IRB"),", que \xe9 um interpretador de comandos que permite a execu\xe7\xe3o de comandos Ruby de forma interativa."),(0,o.kt)("p",null,"Para a aula, o professor criou um arquivo no Google Drive, que \xe9 para irmos editando conforme a aula for decorrendo. O ",(0,o.kt)("a",{parentName:"p",href:"https://bit.ly/unipar-ruby"},"link \xe9 esse"),"."),(0,o.kt)("p",null,"Tudo em Ruby \xe9 um objeto, e para saber o tipo de um objeto, podemos utilizar o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"class"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'"string".class\n# => String\n')),(0,o.kt)("p",null,"Tamb\xe9m podemos utilizar o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"is_a?")," para saber se um objeto \xe9 de um determinado tipo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'"string".is_a?(String)\n# => true\n')),(0,o.kt)("p",null,"Para listar todos os m\xe9todos de um objeto, podemos utilizar o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"methods"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'"string".methods\n[\n    include?, %, *, +, unicode_normalize, to_c, unicode_normalize!,\n    unicode_normalized?, count, partition, unpack, encode, encode!, next,\n    casecmp, insert, bytesize, match, succ!, next!, upto, index, rindex,\n    replace, clear, chr, +@, -@, setbyte, getbyte, <=>, <<, scrub, scrub!,\n    byteslice, ==, ===, dump, =~, downcase, [], []=, upcase, downcase!,\n    capitalize, swapcase, upcase!, oct, empty?, eql?, hex, chars, split,\n    capitalize!, swapcase!, concat, codepoints, reverse, lines, bytes,\n    prepend, scan, ord, reverse!, center, sub, freeze, inspect, intern,\n    end_with?, gsub, chop, crypt, gsub!, start_with?, rstrip, sub!, ljust,\n    length, size, strip!, succ, rstrip!, chomp, strip, rjust, lstrip!,\n    tr!, chomp!, squeeze, lstrip, tr_s!, to_str, to_sym, chop!, each_byte,\n    each_char, each_codepoint, to_s, to_i, tr_s, delete, encoding,\n    force_encoding, sum, delete!, squeeze!, tr, to_f, valid_encoding?,\n    slice, slice!, rpartition, each_line, b, ascii_only?, hash, to_r, <, >,\n    <=, >=, between?, instance_of?, public_send, instance_variable_get,\n    instance_variable_set, instance_variable_defined?,\n    remove_instance_variable, private_methods, kind_of?,\n    instance_variables, tap, method, public_method, singleton_method,\n    is_a?, extend, define_singleton_method, to_enum, enum_for, !~,\n    respond_to?, display, object_id, send, nil?, class, singleton_class,\n    !, !=, __send__, equal?, instance_eval, instance_exec, __id__\n]\n')),(0,o.kt)("p",null,"No Ruby, podemos utilizar o ",(0,o.kt)("inlineCode",{parentName:"p"},"!")," para indicar que um m\xe9todo \xe9 perigoso, ou seja, ele pode alterar o estado do objeto. Por exemplo, o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"upcase!")," altera o estado do objeto, enquanto o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"upcase")," n\xe3o altera o estado do objeto:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'string = "string"\nstring.upcase\n# => "STRING"\nstring\n# => "string"\nstring.upcase! # Vai alterar o estado do objeto\n# => "STRING"\nstring\n# => "STRING"\n')),(0,o.kt)("p",null,"Para poder acessar um valor de uma classe, podemos criar getters e setters. Por exemplo, para criar um getter, podemos utilizar o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"attr_reader"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'class Pessoa\n    attr_reader :nome\n    def initialize(nome)\n        @nome = nome\n    end\nend\n\npessoa = Pessoa.new("Nome da pessoa")\npessoa.nome\n# => "Nome da pessoa"\n')),(0,o.kt)("p",null,"Para criar um setter, podemos utilizar o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"attr_writer"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'class Pessoa\n    attr_writer :nome\n    def initialize(nome)\n        @nome = nome\n    end\nend\n\npessoa = Pessoa.new("Nome da pessoa")\npessoa.nome = "Novo nome"\npessoa.nome\n# => "Novo nome"\n')),(0,o.kt)("p",null,"Para criar um getter e um setter, podemos utilizar o m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"attr_accessor"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'class Pessoa\n    attr_accessor :nome\n    def initialize(nome)\n        @nome = nome\n    end\nend\n\npessoa = Pessoa.new("Nome da pessoa")\npessoa.nome\n# => "Nome da pessoa"\npessoa.nome = "Novo nome"\npessoa.nome\n# => "Novo nome"\n')),(0,o.kt)("p",null,"Para criar um m\xe9todo, podemos utilizar a palavra reservada ",(0,o.kt)("inlineCode",{parentName:"p"},"def"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},"def soma(a, b)\n    a + b\nend\n\nsoma(1, 2)\n# => 3\n")),(0,o.kt)("h2",{id:"criando-um-projeto-ruby"},"Criando um projeto Ruby"),(0,o.kt)("p",null,"Podemos instalar o ",(0,o.kt)("a",{parentName:"p",href:"https://rubyonrails.org/"},"Ruby on Rails")," utilizando o ",(0,o.kt)("a",{parentName:"p",href:"https://rubygems.org/"},"RubyGems"),", que \xe9 um gerenciador de pacotes para a linguagem Ruby. Para instalar o ",(0,o.kt)("a",{parentName:"p",href:"https://rubyonrails.org/"},"Ruby on Rails"),", podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"gem install"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gem install rails\n")),(0,o.kt)("p",null,"E para instalar as depend\xeancias do projeto, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"bundle install"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bundle install\n")),(0,o.kt)("p",null,"Para criar um projeto Ruby, podemos utilizar o ",(0,o.kt)("a",{parentName:"p",href:"https://rubyonrails.org/"},"Ruby on Rails"),", que \xe9 um framework web escrito em Ruby. Para criar um projeto Ruby on Rails, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails new"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails new projeto\n")),(0,o.kt)("p",null,"Para iniciar o servidor do projeto, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails server"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails server\n")),(0,o.kt)("p",null,"Para criar um controller, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails generate controller"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails generate controller articles\n")),(0,o.kt)("p",null,"Para criar um model, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails generate model"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails generate model article title:string body:text\n")),(0,o.kt)("p",null,"Para criar um scaffold, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails generate scaffold"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails generate scaffold article title:string body:text\n")),(0,o.kt)("p",null,"Para criar um migration, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails generate migration"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails generate migration add_details_to_articles\n")),(0,o.kt)("p",null,"Para executar as migrations, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails db:migrate"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails db:migrate\n")),(0,o.kt)("p",null,"Para criar um banco de dados, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"rails db:create"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rails db:create\n")),(0,o.kt)("p",null,"Para gerarmos 1000 ",(0,o.kt)("inlineCode",{parentName:"p"},"articles"),", podemos utilizar no console do Rails o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"Article.create"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'rails console\n1000.times do |i|\n    Article.create(title: "Title: #{i}", body: "Body")\nend\n')),(0,o.kt)("p",null,"Vimos em como fazer na m\xe3o, seguindo o tutorial do ",(0,o.kt)("a",{parentName:"p",href:"https://rubyonrails.org/"},"Ruby on Rails"),"."),(0,o.kt)("p",null,"A aula foi bem produtiva, conseguimos avan\xe7ar bem no tutorial."))}d.isMDXComponent=!0}}]);