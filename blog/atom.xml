<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://pos-unipar.github.io/blog</id>
    <title>Pós Web &amp; Dispositivos Móveis Blog</title>
    <updated>2022-07-02T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://pos-unipar.github.io/blog"/>
    <subtitle>Pós Web &amp; Dispositivos Móveis Blog</subtitle>
    <icon>https://pos-unipar.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[#29 - Node.js]]></title>
        <id>29</id>
        <link href="https://pos-unipar.github.io/blog/29"/>
        <updated>2022-07-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[02/07/2022 - Aula 1 de Node.js (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>02/07/2022 - Aula 1 de Node.js</strong> (Presencial)</p><p>Chegamos na Unipar e a sala estava trancada, após uns 10 minutos, conseguimos entrar na sala.
O Professor <a href="/professores/everton">Marlon</a> passou uma atividade para criamos uma rota para a criação de um novo usuário, com as rotas GET, POST, PUT e DELETE.</p><p>Para o usuário, vamos utilizar criptografia, e precisamos dos pacotes abaixo:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save bcrypt</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save jsonwebtoken</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save passport</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save passport-local</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Implementamos a criptografia e o login com o passport, utilizando JWT para controlar o acesso a rotas.</p><p>Vamos trabalhar com documentação do projeto, para isso vamos utilizar o pacote swagger.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">    npm install --save swagger-ui-express</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    npm install --save swagger-jsdoc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Criamos a documentação do projeto para alguns dos endpoints e testamos como utilizar o swagger.</p><p>Com isso finalizamos a aula de hoje.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="02/07/2022" term="02/07/2022"/>
        <category label="07/2022" term="07/2022"/>
        <category label="2022" term="2022"/>
        <category label="marlon" term="marlon"/>
        <category label="node.js" term="node.js"/>
        <category label="nodejs" term="nodejs"/>
        <category label="node" term="node"/>
        <category label="js" term="js"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#28 - Node.js]]></title>
        <id>28</id>
        <link href="https://pos-unipar.github.io/blog/28"/>
        <updated>2022-06-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[25/06/2022 - Aula 2 de Node.js (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>25/06/2022 - Aula 2 de Node.js</strong> (Presencial)</p><p>O Professor <a href="/professores/everton">Marlon</a>, chegou atrasado 10 minutos. Começou a aula as 08:40h, após o professor enviar o projeto para o github, o link é <a href="https://github.com/pos-unipar/aula-node-posunipar" target="_blank" rel="noopener noreferrer">aula-node-posunipar</a>.</p><p>Começamos a aula instalando um novo pacote para o mongo</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save mongoose</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Seguimos a aula fazendo com que os metodos GET, PATCH e DELETE funcionem com o banco de dados MongoDB</p><p>Teve o intervalo as 12h até as 13:30h.</p><p>Continuamos mudando as rotas para a parte das ordens</p><p>Adicionamos um novo pacote</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --savel multer</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Utilizamos o multer para fazer o upload de arquivos</p><p>Com isso finalizamos a aula de hoje.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="25/06/2022" term="25/06/2022"/>
        <category label="06/2022" term="06/2022"/>
        <category label="2022" term="2022"/>
        <category label="marlon" term="marlon"/>
        <category label="node.js" term="node.js"/>
        <category label="nodejs" term="nodejs"/>
        <category label="node" term="node"/>
        <category label="js" term="js"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#27 - Node.js]]></title>
        <id>27</id>
        <link href="https://pos-unipar.github.io/blog/27"/>
        <updated>2022-06-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[11/06/2022 - Aula 1 de Node.js (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>11/06/2022 - Aula 1 de Node.js</strong> (Presencial)</p><p>O Professor <a href="/professores/everton">Marlon</a>, começou a aula as 08:30h, por ser a primeira aula, teve alguns problemas técnicos em relação a projeto e internet na Unipar, ficamos aguardando sem fazer nada até as 08:45h, pois professor estava aguardando outros alunos chegarem.</p><p>Começamos vendo sobre a origem da linguagem utilizada, o JavaScript, que rodava em navegadores, e a ideia do Node.js é que seja possível rodar JavaScript fora do navegador, ou seja, em um servidor ou em um computador desktop, mas seu maior foco é o desenvolvimento de aplicações backend.</p><p>Para isso acontecer, o Node se utiliza o Chrome V8 Engine, que é um motor de JavaScript. Vamos utilizar esses recursos para poder criar uma API RESTful.</p><p>Para seguir a aula, você deve instalar o Node.js no seu computador, baixando a ultima versão do Node.js no site <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener noreferrer">nodejs.org</a>. Como editor de texto, você deve utilizar o <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio Code</a>. Com isso, rodamos o comando para iniciar o projeto.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm init</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Depois de criar o projeto, vamos instalar o módulo express, que é um módulo que permite que você crie aplicações web.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save express</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Criamos dois arquivos, um <strong>server.js</strong> e <strong>app.js</strong>.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">server.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> http </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">require</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'http'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> app </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">require</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'./app'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> port </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">env</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token constant" style="color:rgb(130, 170, 255)">PORT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">||</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">4000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> server </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> http</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">createServer</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">app</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">server</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">listen</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">port</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">app.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> express </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">require</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'express'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> app </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">express</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">app</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">use</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'/api'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">req</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> res</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> next</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">status</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">200</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">json</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token literal-property property">message</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">'Hello word!'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">module</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> app</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>... e após rodar o comando <code>node server.js</code> e acessar o endereço <a href="http://localhost:4000/api" target="_blank" rel="noopener noreferrer">http://localhost:4000/api</a>, você verá o retorno da mensagem Hello word!.</p><p>A aula para por um momento, 30 minutos de intervalo até as 10:30h.</p><p>Voltamos fazer uma nova rota para produtos, que será a rota /products.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">\api\routes\products.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> express </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">require</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'express'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> router </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> express</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access maybe-class-name" style="color:rgb(130, 170, 255)">Router</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">router</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">get</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'/'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">req</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> res</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> next</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">status</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">200</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">json</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token literal-property property">message</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">'Handling GET requests to /products'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">router</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">post</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'/'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">req</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> res</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> next</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">status</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">201</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">json</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token literal-property property">message</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">'Handling POST requests to /products'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">router</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">get</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'/:productId'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">req</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> res</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> next</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> id </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> req</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">params</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">productId</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword control-flow" style="font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">id </span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">status</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">200</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">json</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            </span><span class="token literal-property property">message</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">'Handling GET requests to /products/'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> id</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            </span><span class="token literal-property property">id</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> id</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="font-style:italic">else</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">status</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">404</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">json</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">            </span><span class="token literal-property property">message</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">'Product not found'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">module</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> router</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>A aula para para o almoço, as 12h, e voltamos as 13:30h.</p><p>Fizemos mais uma classe igual a do <em>produto</em>, chamada <em>ordens</em>.</p><p>Depois disso instalamos o <strong>nodemon</strong>, que é um serviço que monitora o nosso projeto e reinicia o servidor quando houver alguma alteração.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save nodemon</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Criamos também no arquivo <strong>package.json</strong> o comando para rodar o servidor.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token spread operator" style="color:rgb(137, 221, 255)">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token string-property property">"version"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"1.0.0"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token string-property property">"description"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Exemplo de aula para o curso de NodeJS"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token string-property property">"main"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"index.js"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token string-property property">"scripts"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string-property property">"start"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"nodemon server.js"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token spread operator" style="color:rgb(137, 221, 255)">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token string-property property">"keywords"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string" style="color:rgb(195, 232, 141)">"node"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token spread operator" style="color:rgb(137, 221, 255)">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Baixamos também o <strong>morgan</strong>, que é um módulo que permite que você veja o que está acontecendo no servidor.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save morgan</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>E vamos baixar o <strong>body-parser</strong>, que é um módulo que permite que você trabalhe com o corpo da requisição.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">npm install --save body-parser</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Depois de instalar esses pacotes, fizemos alguns ajustes para entender como que a requisição vem até a aplicação. Além disso, configuramos uma regra sobre <strong>cors</strong>.</p><p>Instalamos o MongoDB, e a aula acabou as 17h.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="11/06/2022" term="11/06/2022"/>
        <category label="06/2022" term="06/2022"/>
        <category label="2022" term="2022"/>
        <category label="marlon" term="marlon"/>
        <category label="node.js" term="node.js"/>
        <category label="nodejs" term="nodejs"/>
        <category label="node" term="node"/>
        <category label="js" term="js"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#26 - Python]]></title>
        <id>26</id>
        <link href="https://pos-unipar.github.io/blog/26"/>
        <updated>2022-05-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[28/05/2022 - Aula 3 de Python (remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>28/05/2022 - Aula 3 de Python</strong> (remoto)</p><p>O Professor <a href="/professores/everton">Everton</a>, começou a aula as 08:00h e aguardou os alunos até as 08:10h. A aula seguiu da mesma forma que a passada, professor falando, nós escutando, e tendo que fazer comentários no material que ele passou.</p><p>Detalhe dessa aula é qeu professor estava sem acesso ao Google Meet, e não conseguiu acessar o link do Meet da aula passada. A aula seguiu por um tempo, até que o meet deu aviso de limite da sala. Um aluno criou um novo link, utilizando a conta da Unipar de academico e foi liberado acesso para todos.</p><p>Teve intervalo de 30 minutos as 10h e no almoço, teve 1:30h de intervalo, com a aula voltando as 13:45.</p><p>A tarde continuamos vendo o professor fazendo os códigos e explicando o que está acontecendo.</p><p>A aula termina 17:15h, 15 minutos antes do previsto.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="28/05/2022" term="28/05/2022"/>
        <category label="05/2022" term="05/2022"/>
        <category label="2022" term="2022"/>
        <category label="everton" term="everton"/>
        <category label="python" term="python"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#25 - Python]]></title>
        <id>25</id>
        <link href="https://pos-unipar.github.io/blog/25"/>
        <updated>2022-05-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[14/05/2022 - Aula 2 de Python (remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>14/05/2022 - Aula 2 de Python</strong> (remoto)</p><p>O Professor <a href="/professores/everton">Everton</a>, começou a aula as 08:00h e aguardou os alunos até as 08:10h. A aula seguiu da mesma forma que a passada, professor falando, nós escutando, e tendo que fazer comentários no material que ele passou.</p><p>Teve intervalo de 30 minutos as 10h e no almoço, teve 1:30h de intervalo, com a aula voltando as 13:45.</p><p>A tarde continuamos vendo o professor fazendo os códigos e explicando o que está acontecendo.</p><p>A aula termina 17:15h, 15 minutos antes do previsto.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="14/05/2022" term="14/05/2022"/>
        <category label="05/2022" term="05/2022"/>
        <category label="2022" term="2022"/>
        <category label="everton" term="everton"/>
        <category label="python" term="python"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#24 - Python]]></title>
        <id>24</id>
        <link href="https://pos-unipar.github.io/blog/24"/>
        <updated>2022-05-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[07/05/2022 - Aula 1 de Python (remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>07/05/2022 - Aula 1 de Python</strong> (remoto)</p><p>O Professor <a href="/professores/everton">Everton</a>, começou a aula um pouco antes das 8h, mas alguns as pessoas tiveram problemas para entrar, pois tinhas que utilizar o email acadêmico. O professor começou se apresentando, falando sobre sua carreira, e pediu para cada aluno se apresentar também, isso foi até as 09:15. </p><p>O professor continuou falando como que a matéria vai ser trabalhada, quais os horários e o que pretende ser abordado no curso.</p><h1>Agenda</h1><ul><li>Seu primeiro programa python</li><li>Strings e métodos de string</li><li>Números e matemática</li><li>Funções e laços</li><li>Encontrando e corrigindo erros de código</li><li>Lógica condicional e fluxo de controle</li><li>Tuplas, listas e dicionários</li><li>Programação orientada a objetos</li><li>Módulos e pacotes</li><li>Entrada e saída de arquivos</li><li>Instalando pacotes com pip</li><li>Trabalhando com banco de dados</li><li>Integrando com a web</li></ul><h1>Python</h1><ul><li>Python tem um paradigma funcional, ou seja, tudo é feito por funções.</li><li>Python é uma lingaguês interpretada, ou seja, não é necessário compilar o código para executá-lo.</li><li>Python é uma linguagem versátil, ele pode ser utilizado para criar aplicações de qualquer tipo.<ul><li>Web</li><li>Análise de dados</li><li>Aplicativos</li><li>Sistemas desktop</li></ul></li></ul><p>O professor compartilho no <a href="https://colab.research.google.com/" target="_blank" rel="noopener noreferrer">Google Colab</a> um notebook com o código da primeira aula, que está disponível aqui, <a target="_blank" href="/assets/files/PythonIntroduction-cc80fe281bed18591bf7dd4a144a774f.ipynb">PythonIntroduction.ipynb</a>. Isso ajuda muito pois não precisamos criar nosso ambiente localmente. Utilizamos um ambiente padrão criado pelo Google para trabalhar com o python.</p><p>As 10h até 10:30, o professor fez um intervalo, e após o intervalo, começamos vendo o que é o Google Colab utilizando o arquivo <a target="_blank" href="/assets/files/PythonIntroduction-cc80fe281bed18591bf7dd4a144a774f.ipynb">PythonIntroduction.ipynb</a>. Nós devemos criar um novo notebook, que vai servir para nota, e devemos compartilhar com o professor. Além disso, devemos inserir abaixo de cada código uma explicação sobre o que ele faz.</p><p>Seguimos o material, aprendendo o básico de python, foi assim até 12h.</p><p>A aula voltou as 13:30, e seguimos o material, aprendendo o básico de python, foi assim até o final da aula.</p><p>No final da aula, professor passou uma atividade sobre Fibonacci, para explicarmos o que um trecho de código faz.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="07/05/2022" term="07/05/2022"/>
        <category label="05/2022" term="05/2022"/>
        <category label="2022" term="2022"/>
        <category label="everton" term="everton"/>
        <category label="python" term="python"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#23 - Flutter]]></title>
        <id>23</id>
        <link href="https://pos-unipar.github.io/blog/23"/>
        <updated>2022-04-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[30/04/2022 - Aula 4 de Flutter (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>30/04/2022 - Aula 4 de Flutter</strong> (Presencial)</p><p>O Professor <a href="/professores/marcos">Marcos</a> chegou antes das 08h da manhã, mas a aula começou só as 8h30 pois tinha poucos alunos, mas nesse tempo o professor ficou tirando duvidas sobre o projeto que foi feito na aula anterior.</p><p>O código feito nessa aula é a continuação do projeto <a href="https://github.com/pos-unipar/aula_03_pos_23_04_2022" target="_blank" rel="noopener noreferrer">aula_03_pos_23_04_2022</a>. Fizemos a implementação de mais alguns recursos e funções.</p><p>Depois disso, criamos um novo projeto para trabalhar com parte de estilos do aplicativo. O projeto está no Github no link <a href="https://github.com/pos-unipar/aula_04_pos_30_04_2022" target="_blank" rel="noopener noreferrer">aula_04_pos_30_04_2022</a>.</p><p>A aula seguiu fazendo o estilos no aplicativo, e após o almoço o professor começou a mostrar como trabalhar com layous diferentes entre as plataformas. Esse projeto está no Github no link <a href="https://github.com/pos-unipar/aula_04_bloc_pos_30_04_2022.git" target="_blank" rel="noopener noreferrer">aula_04_bloc_pos_30_04_2022</a></p><p>Antes de terminar a aula, o professor passou o trabalho que deve de ser feito. Explicou algumas coisas, e passou o arquivo em PDF com a explicação.</p><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Trabalho</h5></div><div class="admonition-content"><p>As informações do trabalho estão na pagina da disciplina.
<a href="/docs/flutter#trabalho-final"><strong>Link</strong></a></p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="30/04/2022" term="30/04/2022"/>
        <category label="04/2022" term="04/2022"/>
        <category label="2022" term="2022"/>
        <category label="marcos" term="marcos"/>
        <category label="flutter" term="flutter"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#22 - Flutter]]></title>
        <id>22</id>
        <link href="https://pos-unipar.github.io/blog/22"/>
        <updated>2022-04-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[23/04/2022 - Aula 3 de Flutter (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>23/04/2022 - Aula 3 de Flutter</strong> (Presencial)</p><p>O Professor <a href="/professores/marcos">Marcos</a> chegou antes das 08h da manhã, mas a aula começou só as 8h15 pois tinha poucos alunos, mas nesse tempo o professor ficou tirando duvidas.</p><p>Vamos ver sobre banco de dados, utilizando o plugin do sqlite. O plugin é o <a href="https://pub.dev/packages/sqflite" target="_blank" rel="noopener noreferrer">sqflite</a>.</p><p>Trabalhamos como criar o banco de dados, criamos um modelo, e criamos os metodos de CRUD.</p><p>A aula foi até 12h, e voltou as 13:30.</p><p>Seguimos na parte da terde fazendo o resto do aplicativo, agora focando mais na parte de tela.</p><p>O código feito nessa aula está aqui: <a href="https://github.com/pos-unipar/aula_03_pos_23_04_2022" target="_blank" rel="noopener noreferrer">aula_03_pos_23_04_2022</a></p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="23/04/2022" term="23/04/2022"/>
        <category label="04/2022" term="04/2022"/>
        <category label="2022" term="2022"/>
        <category label="marcos" term="marcos"/>
        <category label="flutter" term="flutter"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#21 - Flutter]]></title>
        <id>21</id>
        <link href="https://pos-unipar.github.io/blog/21"/>
        <updated>2022-04-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[09/04/2022 - Aula 2 de Flutter (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>09/04/2022 - Aula 2 de Flutter</strong> (Presencial)</p><p>O Professor <a href="/professores/marcos">Marcos</a> chegou antes das 08h da manhã, mas a aula começou só as 8h10 pois tinha poucos alunos, mas nesse tempo o professor ficou falando sobre a aula anterior e sobre a utilização do <a href="https://flutter.dev/" target="_blank" rel="noopener noreferrer">Flutter</a>.</p><p>A aula se da inicio criando um novo projeto, que vamos consumir uma API feita pelo professor que contem os dados de times. o URL da API é <a href="http://controle.mdvsistemas.com.br/Esportes/Times/GetTime" target="_blank" rel="noopener noreferrer">http://controle.mdvsistemas.com.br/Esportes/Times/GetTime</a>.</p><p>Montamos uma tela que mostra os dados, como nome do time e a imagem da bandeira. Depois disso, vamos refatorando o código para separar eles em componentes.</p><p>A aula termina 12h e volta as 13h30, continuando a refatoração do código.</p><p>O código feito nessa aula está aqui: <a href="https://github.com/pos-unipar/aula_02_pos_09_04_2022" target="_blank" rel="noopener noreferrer">aula_02_pos_09_04_2022</a></p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="09/04/2022" term="09/04/2022"/>
        <category label="04/2022" term="04/2022"/>
        <category label="2022" term="2022"/>
        <category label="marcos" term="marcos"/>
        <category label="flutter" term="flutter"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#20 - Flutter]]></title>
        <id>20</id>
        <link href="https://pos-unipar.github.io/blog/20"/>
        <updated>2022-04-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[02/04/2022 - Aula 1 de Fluter (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>02/04/2022 - Aula 1 de Fluter</strong> (Presencial)</p><p>O professor <a href="/professores/marcos">Marcos</a> chegou antes das 08h da manhã, para passar a aula sobre <a href="https://flutter.dev/" target="_blank" rel="noopener noreferrer">Flutter</a>.</p><p>Foi falado sobre o que é o flutter, sua estrutura básica, seus componentes, como que é feito a instalação e configuração.</p><p>Para começar a parte prática, foi criado um aplicativo para calcular qual o combustível que é melhor abastecer, etanol ou gasolina.</p><p>Junto com esse projeto, foi falado sobre como separar em componentes, para não repetir código.</p><p>E para finalizar a aula, foi falado de como instalar componentes, utilizando um componente para envio de email, e com isso, foi montado um projeto que trabalha com esse plugin.</p><p>O código feito nessa aula está aqui: <a href="https://github.com/pos-unipar/aula_01_pos_02_04_2022" target="_blank" rel="noopener noreferrer">aula_01_pos_02_04_2022</a></p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="02/04/2022" term="02/04/2022"/>
        <category label="04/2022" term="04/2022"/>
        <category label="2022" term="2022"/>
        <category label="marcos" term="marcos"/>
        <category label="flutter" term="flutter"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#19 - Android]]></title>
        <id>19</id>
        <link href="https://pos-unipar.github.io/blog/19"/>
        <updated>2022-03-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[12/03/2022 - Aula 4 de Android (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>12/03/2022 - Aula 4 de Android</strong> (Presencial)</p><p>O Professor <a href="/professores/paulo">Paulo</a> começa a aula as 08:25h, atrasado novamente. Igual à aula anterior, a última aula de <a href="/docs/android">android</a>.</p><p>Começou falando do trabalho, passando no quadro o que precisa ter no trabalho, passou no quadro e falou para o pessoal começar. Ajudou a tirar dúvidas, e foi isso para a aula de hoje.</p><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Trabalho</h5></div><div class="admonition-content"><p>As informações do trabalho estão na pagina da disciplina.<br>
<a href="/docs/android#trabalho-final"><strong>Link</strong></a></p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="12/03/2022" term="12/03/2022"/>
        <category label="03/2022" term="03/2022"/>
        <category label="2022" term="2022"/>
        <category label="paulo" term="paulo"/>
        <category label="android" term="android"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#18 - Android]]></title>
        <id>18</id>
        <link href="https://pos-unipar.github.io/blog/18"/>
        <updated>2022-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[05/03/2022 - Aula 3 de Android (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>05/03/2022 - Aula 3 de Android</strong> (Presencial)</p><p>O Professor <a href="/professores/paulo">Paulo</a> começa a aula as 08:25h, atrasado novamente.</p><p>Começamos a aula revisando o que foi feito na aula anterior, e vamos implementar banco de dados, para isso vai ser utilizado o <a href="https://github.com/chennaione/sugar" target="_blank" rel="noopener noreferrer">Sugar ORM</a>. Seguimos a documentação do Sugar para configurar o banco de dados no projeto.</p><p>Criamos um DAO para o Aluno, com os métodos de CRUD. E vamos para o intervalo as 9:50.</p><p>Após o intervalo, implementamos o snackbar para notificar se deu certo ou não salvar o Aluno.</p><p>A aula voltou a tarde, 20 minutos atrasados, começando as 13:50.</p><p>A aula continua com o desenvolvimento da tela que vai listar todos os alunos cadastrados.</p><p>Com isso terminamos a aula de hoje, as 17h, 1h mais cedo do que deveria.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="05/03/2022" term="05/03/2022"/>
        <category label="03/2022" term="03/2022"/>
        <category label="2022" term="2022"/>
        <category label="paulo" term="paulo"/>
        <category label="android" term="android"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#17 - Android]]></title>
        <id>17</id>
        <link href="https://pos-unipar.github.io/blog/17"/>
        <updated>2022-02-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[19/02/2022 - Aula 2 de Android (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>19/02/2022 - Aula 2 de Android</strong> (Presencial)</p><p>O Professor <a href="/professores/paulo">Paulo</a> começa a aula as 08:25h, atrasado.</p><p>Vamos continuar a atividade da aula passada, que é um aplicativo de cadastro de alunos.</p><p>Depois de 1h30, nosso aplicativo tem 10 componentes, 1 app bar, 1 toolbar, 5 text inputs e 2 spinners. O professor para a aula para fazer um intervalo, durou 20 minutos.</p><p>Depois do intervalo, trocamos os 2 spinner por um material spinner, além de criar um menu com botões de limpar e salvar.</p><p>A aula voltou a tarde as 13:50, continuando a atividade de cadastro de alunos.</p><p>Fizemos a inclusão de dois actions para poder salvar e limpar os campos além de um campo com formatação de CPF.</p><p>A aula terminou às 17h, uma hora antes.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="19/02/2022" term="19/02/2022"/>
        <category label="02/2022" term="02/2022"/>
        <category label="2022" term="2022"/>
        <category label="paulo" term="paulo"/>
        <category label="android" term="android"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#16 - Android]]></title>
        <id>16</id>
        <link href="https://pos-unipar.github.io/blog/16"/>
        <updated>2022-02-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[12/02/2022 - Aula 1 de Android (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>12/02/2022 - Aula 1 de Android</strong> (Presencial)</p><p>O Professor <a href="/professores/paulo">Paulo</a> começa a aula se apresentando, falando sobre sua carreira e depois explicando o que é Android.</p><p>A aula começou falando sobre as versões do Android, quando surgiu e as principais alterações do Android no decorrer do tempo.</p><p>Vamos começar falando sobre Activity</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="activity">Activity<a class="hash-link" href="#activity" title="Direct link to heading">​</a></h2><p>A Activity é a classe mais importante do Android, ela é a classe que representa uma tela. Ou em outras palavras, é o "back-end" do Android.</p><p>O ciclo de vida de uma Activity é:</p><ul><li>onCreate: é chamada quando a Activity é criada.</li><li>onStart: é chamada quando a Activity é mostrada.</li><li>onResume: é chamada quando a Activity é mostrada.</li><li>onPause: é chamada quando a Activity é escondida.</li><li>onStop: é chamada quando a Activity é escondida.</li><li>onDestroy: é chamada quando a Activity é destruída.</li></ul><p>Intent é uma classe que representa uma ação que será executada. A Intent é utilizada para enviar informações entre Activities.</p><ul><li>Inicia uma Activity</li><li>Inicia um Service</li><li>Fornecer um Broadcast</li></ul><p>Abrimos o Android Studio e criamos um aplicativo, com isso o professor mostra os principais arquivos, onde fica as dependências, o build.gradle, o AndroidManifest.xml, o MainActivity.java e o AndroidManifest.xml.</p><p>Vimos tambem a pate de layout, que é o que faz a interface gráfica do nosso aplicativo. O layout é um arquivo XML que define o comportamento da nossa Activity. Os principais componentes do layout são:</p><ul><li>TextView: TextView é uma classe que representa um texto.</li><li>Button: Button é uma classe que representa um botão.</li><li>EditText: EditText é uma classe que representa um campo de texto.</li></ul><p>E temos os componentes LinearLayout, que é uma classe que representa um layout linear, que é um layout que organiza os componentes em linhas. VerticalLayout, que é uma classe que representa um layout vertical, que é um layout que organiza os componentes em colunas. ConstraintLayout/RelativeLayout, que é uma classe que representa um layout que utiliza as restrições de layout.</p><p>Isso é o que foi visto pela manha.</p><p>Após o almoço, o professor continuou falando sobre os layouts e construindo exemplos de ConstraintLayout, LinearLayout e VerticalLayout.</p><p>Fizemos um exemplo, adicionando campos de texto, botões e realizando a navegação entre telas.</p><p>As 17h a aula termina.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="12/02/2022" term="12/02/2022"/>
        <category label="02/2022" term="02/2022"/>
        <category label="2022" term="2022"/>
        <category label="paulo" term="paulo"/>
        <category label="android" term="android"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#15 - Backend com Java]]></title>
        <id>15</id>
        <link href="https://pos-unipar.github.io/blog/15"/>
        <updated>2021-11-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[13/11/2021 - Aula 4 de Backend com Java (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>13/11/2021 - Aula 4 de Backend com Java</strong> (Presencial)</p><p>Após algumas semanas sem aula por problemas de saude e disponibilidade da sala, a aula voltou hoje, sendo a ultima do ano e da materia. </p><p>O Professor <a href="/professores/djonathan">Djonathan</a> começa a aula falando sobre padrão de organização de um projeto. Comparando alguns tipos. Ele falou que posteriormente vai passar um material sobre isso.</p><p>Essa parte de organização vai ser utilizada para o trabalho, além de uma forma de documentar a nossa API utilizando OpenAPI. O professor foi atualizando o projeto que temos, do qual vamos ter que seguir para entregar o trabalho.</p><p>Isso foi o que foi visto pela manha. Após o almoço, começamos a ver sobre APIs REST e os seus verbos HTTP, vimos sobre HATEOAS e sobre o uso de Swagger.</p><p>Voltamos as aulas presenciais, pois o decreto que permitia não está mais em vigor. O Professor <a href="/professores/djonathan">Djonathan</a> começa a aula fazendo uma revisão da segunda aula.</p><ul><li>Princípio da Responsbilidade Única<ul><li>Classes e metodos sempre coesos, que ele ~e responsavel por ele mesmo.</li></ul></li><li>Princípio Aberto-Fechado<ul><li>Uma forma melhor de escrever, que garante a sustentabilidade do código.</li></ul></li><li>Padrões</li></ul><p>Depois de revisar, a aula continuou com Spring, utilizando o projeto <a href="https://github.com/pos-unipar/unipar-2021-aula-2" target="_blank" rel="noopener noreferrer">unipar-2021-aula-2</a> para implementar alguns recursos do <strong>Spring</strong>, conforme o professor ia fazendo ele ia explicando a utilização dos componentes. </p><ul><li>@Component</li><li>@AutoWired</li><li>Injeção de dependência por Setter</li><li>Contrutor</li></ul><p>Tudo isso visto até o momento foi o modulo 1, agora vamos começar o modulo 2, que é a utilização de APIs.</p><blockquote><p>Como levar o monte Fuji do Japão para a India?
<img loading="lazy" alt="Monte Fuji" src="/assets/images/imagem1-db0cfea2b22a10af7095df5d4e08ab3c.png" width="992" height="559" class="img_ev3q">
R: Uma foto já faz você levar para a India.</p></blockquote><small>Livro: How Do You Fight a Horse-Sized Duck?: Secrets to Succeeding at Interview Mind Games and Getting the Job You Want</small><h2 class="anchor anchorWithStickyNavbar_LWe7" id="api">API<a class="hash-link" href="#api" title="Direct link to heading">​</a></h2><blockquote><p>API é um conjunto de definições e protocolos usado no desenvolvimento e na integração de software de aplicações.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="rest">REST<a class="hash-link" href="#rest" title="Direct link to heading">​</a></h2><blockquote><p>O estilo de Transferência de Estado Representacional (REST) é uma abstração dos elementos arquiteturais de um sistema de distribuição de hipermídia.</p></blockquote><p><strong>Estruturas como URIs (Coleções vs Recursos vs Hierarquias)</strong>  </p><ul><li>/planos</li><li>/planos/1</li><li>/planos/1/dependentes/</li><li>/planos/1/dependentes/4</li></ul><p>Obs: sempre utilizar substantivos e nunca verbos  </p><ul><li>/planos/cancelar (errado)</li></ul><p><strong>Padrões para URIs</strong>  </p><ul><li>Mantenha tudo em caixa baixa</li><li>Substitua espaços com hífens ou underscore</li></ul><p><strong>Representação</strong></p><ul><li>Deve ser consistentes (a mesma requisição deve retornar a mesma resposta caso o recurso não tenha sido modificado)</li><li>O conteúdo pode ser negociado</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="json">JSON<a class="hash-link" href="#json" title="Direct link to heading">​</a></h2><blockquote><p><a href="https://www.json.org/json-pt.html" target="_blank" rel="noopener noreferrer">https://www.json.org/json-pt.html</a></p></blockquote><p>Exemplo de JSON</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"nome"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"João da Silva"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"idade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"20"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"cidade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"São Paulo"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"estado"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"SP"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"pais"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Brasil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Exemplo 2</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"cliente"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"data"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"2020-10-10"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"itens"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"id"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"nome"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Item 1"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"quantidade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">10</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"valor"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">100.00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"id"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"nome"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Item 2"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"quantidade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">20</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"valor"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">200.00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Com isso terminamos a aula pela parte da manhã, vamos para o almoço e depois a aula continuou com a criação de um novo projeto, para ser a nossa API.</p><p>Esse projeto é um sistema para aulas online, começamos montando a parte da <em>disciplina</em>, criando os metodos <strong>GET</strong> para retornas todos os dados, <strong>POST</strong>, para criar uma nova disciplina, <strong>PUT</strong> para atualizar os dados da disciplina por inteiro e <strong>PATCHE</strong> para atualizar somente um dado, e por fim, <strong>DELETE</strong> para deletar a disciplina.</p><p><img loading="lazy" alt="Verbos HTTP" src="/assets/images/imagem2-c5fa1ed2b3d43bab64e0be279bafe11e.png" width="985" height="556" class="img_ev3q"></p><p>Além de ver alguns dos verbos HTTPS, foi falado sobre os códigos de status HTTP.</p><p><img loading="lazy" alt="Status HTTP" src="/assets/images/imagem3-4fbf993637876ded29e602bfb3db4173.png" width="988" height="554" class="img_ev3q"></p><p>Com isso foi finalizado a aula.</p><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Trabalho</h5></div><div class="admonition-content"><p>As informações do trabalho estão na pagina da disciplina.<br>
<a href="/docs/backend-java#trabalho-final"><strong>Link</strong></a></p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="13/11/2021" term="13/11/2021"/>
        <category label="11/2021" term="11/2021"/>
        <category label="2021" term="2021"/>
        <category label="djonathan" term="djonathan"/>
        <category label="backend com java" term="backend com java"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#14 - Backend com Java]]></title>
        <id>14</id>
        <link href="https://pos-unipar.github.io/blog/14"/>
        <updated>2021-10-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[09/10/2021 - Aula 3 de Backend com Java (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>09/10/2021 - Aula 3 de Backend com Java</strong> (Presencial)</p><p>Voltamos as aulas presenciais, pois o decreto que permitia não está mais em vigor. O Professor <a href="/professores/djonathan">Djonathan</a> começa a aula fazendo uma revisão da segunda aula.</p><ul><li>Princípio da Responsbilidade Única<ul><li>Classes e metodos sempre coesos, que ele ~e responsavel por ele mesmo.</li></ul></li><li>Princípio Aberto-Fechado<ul><li>Uma forma melhor de escrever, que garante a sustentabilidade do código.</li></ul></li><li>Padrões</li></ul><p>Depois de revisar, a aula continuou com Spring, utilizando o projeto <a href="https://github.com/pos-unipar/unipar-2021-aula-2" target="_blank" rel="noopener noreferrer">unipar-2021-aula-2</a> para implementar alguns recursos do <strong>Spring</strong>, conforme o professor ia fazendo ele ia explicando a utilização dos componentes. </p><ul><li>@Component</li><li>@AutoWired</li><li>Injeção de dependência por Setter</li><li>Contrutor</li></ul><p>Tudo isso visto até o momento foi o modulo 1, agora vamos começar o modulo 2, que é a utilização de APIs.</p><blockquote><p>Como levar o monte Fuji do Japão para a India?
<img loading="lazy" alt="Monte Fuji" src="/assets/images/imagem1-db0cfea2b22a10af7095df5d4e08ab3c.png" width="992" height="559" class="img_ev3q">
R: Uma foto já faz você levar para a India.</p></blockquote><small>Livro: How Do You Fight a Horse-Sized Duck?: Secrets to Succeeding at Interview Mind Games and Getting the Job You Want</small><h2 class="anchor anchorWithStickyNavbar_LWe7" id="api">API<a class="hash-link" href="#api" title="Direct link to heading">​</a></h2><blockquote><p>API é um conjunto de definições e protocolos usado no desenvolvimento e na integração de software de aplicações.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="rest">REST<a class="hash-link" href="#rest" title="Direct link to heading">​</a></h2><blockquote><p>O estilo de Transferência de Estado Representacional (REST) é uma abstração dos elementos arquiteturais de um sistema de distribuição de hipermídia.</p></blockquote><p><strong>Estruturas como URIs (Coleções vs Recursos vs Hierarquias)</strong>  </p><ul><li>/planos</li><li>/planos/1</li><li>/planos/1/dependentes/</li><li>/planos/1/dependentes/4</li></ul><p>Obs: sempre utilizar substantivos e nunca verbos  </p><ul><li>/planos/cancelar (errado)</li></ul><p><strong>Padrões para URIs</strong>  </p><ul><li>Mantenha tudo em caixa baixa</li><li>Substitua espaços com hífens ou underscore</li></ul><p><strong>Representação</strong></p><ul><li>Deve ser consistentes (a mesma requisição deve retornar a mesma resposta caso o recurso não tenha sido modificado)</li><li>O conteúdo pode ser negociado</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="json">JSON<a class="hash-link" href="#json" title="Direct link to heading">​</a></h2><blockquote><p><a href="https://www.json.org/json-pt.html" target="_blank" rel="noopener noreferrer">https://www.json.org/json-pt.html</a></p></blockquote><p>Exemplo de JSON</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"nome"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"João da Silva"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"idade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"20"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"cidade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"São Paulo"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"estado"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"SP"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"pais"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Brasil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Exemplo 2</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"cliente"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"data"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"2020-10-10"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token property">"itens"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"id"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"nome"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Item 1"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"quantidade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">10</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"valor"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">100.00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"id"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"nome"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Item 2"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"quantidade"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">20</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token property">"valor"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">200.00</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Com isso terminamos a aula pela parte da manhã, vamos para o almoço e depois a aula continuou com a criação de um novo projeto, para ser a nossa API.</p><p>Esse projeto é um sistema para aulas online, começamos montando a parte da <em>disciplina</em>, criando os metodos <strong>GET</strong> para retornas todos os dados, <strong>POST</strong>, para criar uma nova disciplina, <strong>PUT</strong> para atualizar os dados da disciplina por inteiro e <strong>PATCHE</strong> para atualizar somente um dado, e por fim, <strong>DELETE</strong> para deletar a disciplina.</p><p><img loading="lazy" alt="Verbos HTTP" src="/assets/images/imagem2-c5fa1ed2b3d43bab64e0be279bafe11e.png" width="985" height="556" class="img_ev3q"></p><p>Além de ver alguns dos verbos HTTPS, foi falado sobre os códigos de status HTTP.</p><p><img loading="lazy" alt="Status HTTP" src="/assets/images/imagem3-4fbf993637876ded29e602bfb3db4173.png" width="988" height="554" class="img_ev3q"></p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="09/10/2021" term="09/10/2021"/>
        <category label="10/2021" term="10/2021"/>
        <category label="2021" term="2021"/>
        <category label="djonathan" term="djonathan"/>
        <category label="backend com java" term="backend com java"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#13 - Backend com Java]]></title>
        <id>13</id>
        <link href="https://pos-unipar.github.io/blog/13"/>
        <updated>2021-09-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[25/09/2021 - Aula 2 de Backend com Java (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>25/09/2021 - Aula 2 de Backend com Java</strong> (Remoto)</p><p>A aula hoje é remota, e atrasou um pouco por causa de alguns problema tecnicos, nada que atrapalhou a aula.</p><p>Durante a semana, o professor <a href="/professores/djonathan">Djonathan</a> passou um material complementar sobre a primeira aula. esse material está disponivel <a target="_blank" href="/assets/files/Modulo_1_Material_de_Apoio-630338045b0dbbd3c378a283d7b00616.pdf">aqui</a>. Além disso, apresentou um <a href="https://github.com/pos-unipar/unipar-2021-trabalho-plano" target="_blank" rel="noopener noreferrer">repositorio</a> que vai ser utilizado para o trabalho em grupo que vai ser feito no decorrer das aulas, onde cada equipe vai implementar um item.</p><p>Seguimos com a criação de um projeto novo Spring, do qual vai ser o esqueleto do trabalho que vamos fazer. Esse projeto está no <a href="https://github.com/pos-unipar/unipar-2021-aula-2" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><p>Professor continuou mostrando como trabalhar com o GitHub, exemplificando a utilização de <strong>Pull Request</strong> para poder enviar as alterações.</p><p>Após essa parte introdutoria, começamos com o conteudo, seguindo o material da ultima aula, que está disponivel <a target="_blank" href="/assets/files/Modulo-1-Orientacao-a-Objetos-9b6aecea0dd22d0267078fd235b4811a.pdf">aqui</a></p><p><strong>Coesão</strong>
Refere-se a ligação ou harmonia entre elementos textuais.</p><p><strong>Acoplamento</strong>
que está acoplado (ligado, conectado)</p><ul><li><strong>SOLID</strong></li></ul><blockquote><p>Acrônimo para os Cinco Princípios de um bom Design Orientado a Objeto, cunhado por Bob Martin em <!-- -->[MARTIN, 2000]<!-- -->.</p></blockquote><ul><li><p><strong>S</strong> - Princípio da Responsabilidade Única<br>
<em>Todo objeto do seu sistema deveria ter uma única responsabilidade, e todos os  erviços desse objeto deveriam focar em realizar essa responsabilidade única.</em></p></li><li><p><strong>O</strong> - Princípio do Aberto-Fechado<br>
<em>Classes deveriam estar abertas para extensão e fechadas para modificação.</em></p></li><li><p><strong>L</strong> - Princípio da Substituição de Liskov<br>
<em>Subtipos devem ser substituíveis por seus tipos base.</em></p></li><li><p><strong>I</strong> - Princípio da Segregação de Interfaces<br>
<em>Muitas interfaces especializadas são melhores que uma interface de propósito geral.</em></p></li><li><p><strong>D</strong> - Princípio da Inversão de Dependências<br>
<em>Dependa de abstrações ao invés de classes concretas.</em></p></li></ul><p>Com isso, começamos a utilizar o conceito do <strong>SOLID</strong>, e montamos um exemplo de sistemas de simulador de emprestimo. Fomos gerando as classes, e fluxos, e melhorando com o decorrer da aula. Essa atividade pode ser vista em <a href="https://github.com/pos-unipar/unipar-2021-aula-2" target="_blank" rel="noopener noreferrer">GitHub</a></p><p>Professor apresentou varios padrões, ele vai depois disponibilizar um material complementar, quando estiver disponivel, coloco o link aqui.</p><p>Com isso terminamos a aula, conversamos um pouco sobre o trabalho, como vai funcionar.</p><p>No final da aula, aproveitei para conversar e compartilhar uma forma de rodar os teste utilizando GitHub Actions, e ele pediu para fazer o pull request para incluir no projeto.</p><p>E isso foi tudo na aula 2.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p><strong>Material complementar</strong>
<a target="_blank" href="/assets/files/Modulo_1_Material_Adicional-00a4b6c16d7084173fd4ab1ea718412e.pdf">Máterial adicional em PDF aula 02</a></p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="25/09/2021" term="25/09/2021"/>
        <category label="09/2021" term="09/2021"/>
        <category label="2021" term="2021"/>
        <category label="djonathan" term="djonathan"/>
        <category label="backend com java" term="backend com java"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#12 - Backend com Java]]></title>
        <id>12</id>
        <link href="https://pos-unipar.github.io/blog/12"/>
        <updated>2021-09-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[11/09/2021 - Aula 1 de Backend com Java (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>11/09/2021 - Aula 1 de Backend com Java</strong> (Presencial)
,
Professor <a href="/professores/geferson">Geferson</a> fez a apresentação do professor <a href="/professores/djonathan">Djonathan</a>, visto que é a primeira aula que temos com ele, sendo assim, ele tambem perguntou algo sobre nós, uma pequena apresentação para saber o nível de conhecimento do pessoal.</p><p>A aula começou utilizando o material <a target="_blank" href="/assets/files/Modulo-1-Orientacao-a-Objetos-9b6aecea0dd22d0267078fd235b4811a.pdf">.pdf</a>, com a parte de <strong>Design e Orientado a Objetos</strong>.</p><blockquote><p>Uma linguagem suporta um Estilo de Programação se ela provê funcionalidades que tornam conveniente (razoavelmente fácil, seguro e eficiente) utilizar esse estilo. Uma linguagem não suporta uma técnica se é necessário um esforço excepcional ou habilidade para escrever os determinados programas; nesse caso, a linguagem simplesmente habilita os programadores a utilizar a técnica.</p></blockquote><h3>Conceitos Chave</h3><ul><li><strong>Estilo procedural</strong><ul><li>Decida quais procedimentos você deseja, utilize o melhor algoritmo que você possa encontrar.</li></ul></li><li><strong>Ocultação de Dados</strong><ul><li>Decida quais procedimentos você deseja, particionar o programa de forma que os dados fiquem ocultos em módulos.</li></ul></li><li><strong>Abstração de Dados</strong><ul><li>Decida quais tipos você deseja, forneça um conjunto de operações para cada tipo.</li></ul></li></ul><h3>Orientação a Objetos (Conceito)</h3><p>Decida quais classes você deseja; forneça um conjunto de operações para cada classe; torne as semelhanças explícitas utilizando herança.</p><h3>OOP (Objetos)</h3><p>Coisas (pessoas, animais, objetos), características (cor, sabor), eventos (confirmação, cancelamento), estado (pendente, confirmado), <strong>basicamente tudo que possamos chamar com um substantivo / nome próprio</strong>, incluindo objetos abstratos.</p><p><img loading="lazy" alt="Imagem OOP" src="/assets/images/imagem-OOP-objetos-969ab390d4b0d7a8889fe6a135c843c6.png" width="780" height="472" class="img_ev3q"></p><h3>OOP (Classes)</h3><p>Grupos de objetos com características muito similares, do ponto de vista técnico compõem o conjunto de tipos de uma linguagem na categoria de Tipo de Dados Abstratos. Objetos de determinada classe são denominados como <strong>instâncias</strong>.</p><p><img loading="lazy" alt="Imagem OOP" src="/assets/images/imagem-OOP-classes-b34cf5e1b91acfc1c6c6b81902987b68.png" width="694" height="251" class="img_ev3q"></p><h3>OOP (Atributos)</h3><p>Descrevem as características de um objeto, fazendo parte do arquétipo da classe. Cada instância da classe armazena os valores de seus atributos, porém atributos estáticos são compartilhados entre as instâncias.</p><p><img loading="lazy" alt="Imagem OOP" src="/assets/images/imagem-OOP-atributos-21057b616aef8432baa19a6775c108e8.png" width="672" height="328" class="img_ev3q"></p><h3>OOP (Mensagens/Métodos)</h3><p>Objetos se comunicam através de mensagens, a unidade de abstração dessas mensagens é chamada de método. Métodos abstraem uma determinada lógica  ue será aplicada a uma referida instância sempre que receber uma mensagem específica. Métodos podem conter parâmetros e retornar valores ao final e sua execução.</p><p><img loading="lazy" alt="Imagem OOP" src="/assets/images/imagem-OOP-metodos-4fbd6dbb18c73afa8a54810b3d63ab3d.png" width="804" height="217" class="img_ev3q"></p><h3>OOP (Encapsulamento)</h3><p>Ninguém deve se preocupar com a forma em que um objeto está organizado ou o quê ele sabe. Quanto menos comprometido uma classe tiver com o mundo exterior menor é a superfície de mudança que pode impactar a manutenabilidade do sistema.</p><p><img loading="lazy" alt="Imagem OOP" src="/assets/images/imagem-OOP-encapsulamento-9d33f42fefea207d7c7ddecd638febd8.png" width="800" height="214" class="img_ev3q"></p><p>Após explicar esses conceitos, começamos a mexer em um projeto, vendo os conceitos iniciais de Kotlin. Criamos uma classe e vimos como implementar algumas funções.</p><p>Com isso terminamos o que foi visto pela manha, e a aula volta as 13:30, vamos continuar o material no slides e fazer na pratica o código.</p><h3>OOP (Generalização)</h3><p>Refere-se a habilidade de organizar os objetos em estruturas hierárquicas.</p><p>Classes podem implementar dois tipos de Generalização:  </p><ul><li>Tipo: Classes diferentes compartilham a mesma interface.</li><li>Implementação: Onde além da interface, a implementação também é compartilhada.</li></ul><h3>OOP (Interfaces)</h3><p>O conceito de Interface tem duas aplicações:</p><ul><li>O conjunto de operações que compõem o contrato de uma classe com os consumidores.</li><li>Herança de Tipos, onde diversas classes podem compartilhar a mesma interface.</li></ul><p><img loading="lazy" alt="Imagem OOP" src="/assets/images/imagem-OOP-interfaces-b20c0d94c1dff58ad0f4236b7d15c2a9.png" width="660" height="395" class="img_ev3q"></p><h3>OOP (Herança)</h3><p>Refere-se diretamente a Generalização de Implementação, onde classes compartilham sua implementação além da interface.</p><p><img loading="lazy" alt="Imagem OOP" src="/assets/images/imagem-OOP-heranca-98e33a0c142fbb128811b0d44289562b.png" width="689" height="506" class="img_ev3q"></p><h2>Boas Práticas de Design</h2><ul><li><strong>DRY</strong><ul><li>Don’t Repeat Yourself! (<em>Não se repita!</em>)</li></ul></li><li><strong>YAGNI</strong><ul><li>You Ain’t gonna need it! <em>(Você não vai precisar disso!</em>)</li></ul></li><li><strong>KISS</strong><ul><li>Keep it simple, stupid. (<em>Mantenha isso simples, idiota.</em>)</li></ul></li></ul><p>Professor discutiu todos esses pontos durante a aula de hoje, no PDF, fomos até a pagina 19. O resto vai ficar para as proximas aulas.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p><strong>Material complementar</strong>
<a target="_blank" href="/assets/files/Modulo_1_Material_de_Apoio-630338045b0dbbd3c378a283d7b00616.pdf">Máterial de apoio em PDF aula 01</a></p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="11/09/2021" term="11/09/2021"/>
        <category label="09/2021" term="09/2021"/>
        <category label="2021" term="2021"/>
        <category label="djonathan" term="djonathan"/>
        <category label="backend com java" term="backend com java"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#11 - Banco de Dados]]></title>
        <id>11</id>
        <link href="https://pos-unipar.github.io/blog/11"/>
        <updated>2021-08-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[28/08/2021 - Aula 3 de Banco de dados (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>28/08/2021 - Aula 3 de Banco de dados</strong> (Presencial)</p><p>A aula demorou cerca de 20 minutos para começar, alunos queriam esperar os alunos atrasados, mas a aula tem que dar prioridade pra quem chegou na hora. Tendo isso em mente, o professor <a href="/professores/fernando">Fernando</a> começou a aula fazendo a revisão da <a href="/docs/banco-de-dados#atividade-5">atividade 5</a>.</p><p>As 09:30, é feito um intervalo, e depois começamos a aula com esses slides <a target="_blank" href="/assets/files/Aula-03.01-BDs_28_08-9e35e561fd46292d730c0efb3a3ba39d.pdf">aqui</a>.</p><p>Foi visto como trabalhar com <em>domínios</em>, <em>transações</em>, <em>converter tipos</em>, <em>views</em>, <em>funções</em> e <em>triggers</em>. Com isso o professor passou alguns exemplos para praticarmos.</p><p>Finalizamos a parte da manha com isso, e voltamos 13:30 com o assunto de <strong>Power BI</strong>, conteúdo que não estava previsto, e entrando no lugar de NOSQL. Utilizamos os slides que estão <a target="_blank" href="/assets/files/Aula-03.02-Power_BI_28_08-79c393508e00bd722a78ca9a4a03951a.pdf">aqui</a>.</p><p>A aula seguiu com o professor mostrando a ferramenta, e como fazer a utilização para gera gráficos e relatórios, como importar dados, etc. </p><p>No final, não teve nada sobre o trabalho, mas o professor vai passar durante a semana.</p><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Trabalho</h5></div><div class="admonition-content"><p>As informações do trabalho estão na pagina da disciplina.<br>
<a href="/docs/banco-de-dados#trabalho-final"><strong>Link</strong></a></p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="28/08/2021" term="28/08/2021"/>
        <category label="08/2021" term="08/2021"/>
        <category label="2021" term="2021"/>
        <category label="fernando" term="fernando"/>
        <category label="banco de dados" term="banco de dados"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#10 - Banco de Dados]]></title>
        <id>10</id>
        <link href="https://pos-unipar.github.io/blog/10"/>
        <updated>2021-08-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[14/08/2021 - Aula 2 de Banco de dados (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>14/08/2021 - Aula 2 de Banco de dados</strong> (Remoto)</p><p>A aula demorou um pouco pra começar, pois alguns alunos pensaram que seria presencial, e estão na universidade, então o professor aguardou até eles irem para algum laboratório.</p><p>O professor <a href="/professores/fernando">Fernando</a> começou a aula revisando a <a href="/docs/banco-de-dados#atividade-2">atividade 2</a>, explicando o objetivo e tirando alguma duvida que alguém possa ter ainda. Além disso, o professor fez uma revisão da aula anterior, pois ele alterou o material e adicionou novas explicações.</p><p>Comandos DDL são sempre comandos que vão mudar na estrutura das tabelas, dentre elas temos:</p><ul><li>Adicionar ou Remover columns</li><li>Adicionar ou Remover constraints</li><li>Mudar valores default</li><li>Mudar tipos de dados da coluna</li><li>Renomear Colunas</li><li>Renomear Tabelas</li></ul><p>Já o DML, ele manipula os dados.</p><p>A aula seguiu utilizando o material que está no <a href="https://bit.ly/pos_bd" target="_blank" rel="noopener noreferrer">link</a> ou arquivo <a target="_blank" href="/assets/files/Guia-Disciplina-73ffdd6421675cb9d7a9099f550378de.pdf">Guia Disciplina</a>, lá está duas apresentações, a apresentação utilizada foi essa <a target="_blank" href="/assets/files/Aula-02.01-BDs-14_08-627d63ec770bf7b63ad381048fb396c8.pdf">aqui</a>.</p><p>Professor pediu para criamos um banco de dados novo, e rodar o seguinte SQL:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">CREATE</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">TABLE</span><span class="token plain"> departamentos</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  id_departamento </span><span class="token keyword" style="font-style:italic">INT</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">PRIMARY</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">KEY</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  nome </span><span class="token keyword" style="font-style:italic">VARCHAR</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">60</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  responsavel </span><span class="token keyword" style="font-style:italic">VARCHAR</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">60</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">CREATE</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">TABLE</span><span class="token plain"> grupos</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  id_grupo </span><span class="token keyword" style="font-style:italic">serial</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  nome </span><span class="token keyword" style="font-style:italic">VARCHAR</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">60</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  id_departamento </span><span class="token keyword" style="font-style:italic">INT</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">REFERENCES</span><span class="token plain"> departamentos</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Depois, populamos o banco de dados com alguns <em>INSERTS</em>;</p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>INSERTS</summary><div><div class="collapsibleContent_i85q"><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">-- Informando todos os campos:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">INSERT</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">INTO</span><span class="token plain"> departamentos </span><span class="token keyword" style="font-style:italic">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token string" style="color:rgb(195, 232, 141)">'Eletrônicos'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token string" style="color:rgb(195, 232, 141)">'Fernando'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">-- Múltiplos INSERTS:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">INSERT</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">INTO</span><span class="token plain"> departamentos </span><span class="token keyword" style="font-style:italic">VALUES</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">--(1,'Eletrônicos','Fernando'), </span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token string" style="color:rgb(195, 232, 141)">'Portáteis'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token string" style="color:rgb(195, 232, 141)">'Fernando'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">3</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token string" style="color:rgb(195, 232, 141)">'Eletrodomésticos'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token string" style="color:rgb(195, 232, 141)">'Fernando'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">-- Informando apenas valores obrigatórios:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">INSERT</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">INTO</span><span class="token plain"> grupos </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">id_grupo</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> id_departamento</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">-- Tabela com campo Serial:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">INSERT</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">INTO</span><span class="token plain"> grupos </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">nome</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> id_departamento</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">VALUES</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">'Smartphone'</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">-- A partir de dados de outra tabela:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">INSERT</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">INTO</span><span class="token plain"> grupos </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">nome</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> id_departamento</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">SELECT</span><span class="token plain"> nome</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> id_departamento </span><span class="token keyword" style="font-style:italic">FROM</span><span class="token plain"> novo_grupos </span><span class="token keyword" style="font-style:italic">WHERE</span><span class="token plain"> id_grupo </span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">10</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details><br><p>Professor fez mais alguns exemplos, adicionando <em>constraints</em> para garantir a integridade do banco de dados, fazendo <em>selects</em>, <em>updates</em> e <em>deletes</em>.</p><p>Após a explicação, professor passou uma atividade, utilizando o mesmo grupo da aula passada, é a <a href="/docs/banco-de-dados#atividade-3">atividade 3</a>.</p><p>Finalizamos a manha até esse ponto, e no período da tarde voltamos vendo a parte de <em>selects</em> com o material do <a target="_blank" href="/assets/files/Aula-02.02-BDs-14_08-ff4b2fa5fdf856863864ef8cda0d3dda.pdf">link</a>. Vimos os tipos de join, e como fazer um <em>join</em> entre tabelas, como utilizar o <em>group by</em> e como utilizar o <em>order by</em> e por fim, o <em>limit</em>.</p><p>Depois disso, professor passou uma <a href="/docs/banco-de-dados#atividade-4">atividade 4</a>, que pode ser entregue até a próxima aula.</p><p>Professor ficou para tirar as dúvidas da atividade, e com isso finalizamos a aula de hoje.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="14/08/2021" term="14/08/2021"/>
        <category label="08/2021" term="08/2021"/>
        <category label="2021" term="2021"/>
        <category label="fernando" term="fernando"/>
        <category label="banco de dados" term="banco de dados"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#9 - Banco de Dados]]></title>
        <id>9</id>
        <link href="https://pos-unipar.github.io/blog/9"/>
        <updated>2021-07-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[31/07/2021 - Aula 1 de Banco de dados (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>31/07/2021 - Aula 1 de Banco de dados</strong> (Remoto)</p><p>A aula começou as 08:00, com um tempo a mais para até os alunos entrarem, com isso, começou a ser feito a apresentação dos alunos de forma individual. Após isso, o professor <a href="/professores/fernando">Fernando</a> falou sobre como vai decorrer o curso e as aulas.</p><p>O professor criou um arquivo que está disponível no <a href="https://bit.ly/pos_bd" target="_blank" rel="noopener noreferrer">link</a> ou arquivo <a target="_blank" href="/assets/files/Guia-Disciplina-73ffdd6421675cb9d7a9099f550378de.pdf">Guia Disciplina</a>, nesse arquivo tem diversas informações sobre o curso, tentei uma forma elegante de imprimir o site, mas fica ruim, então tudo que for importante estou salvando aqui no site.</p><p>A aula seguiu utilizando a <a target="_blank" href="/assets/files/Aula-01.01-BDs-31_07-fa0cd790eeb710c9cb8d6f8c9218df98.pdf">apresentação</a>.</p><p><strong>Banco de dados pode ser resumido em:</strong></p><blockquote><p>Uma coleção de dados relacionados</p></blockquote><ul><li><strong>Dados</strong>: Fatos conhecidos que podem ser registrados e que possuem significado implícito.</li><li>A mídia pode ser usando um computador, ou uma agenda indexada, sistema de pastas organizado, planilha de excell, e assim por diante.</li></ul><p>Desta forma, um simples texto pode ser um banco de dados. Vale lembrar que o banco de dados representa um aspecto do mundo real,
geralmente chamado de <strong>mini mundo</strong> ou <strong>universo de discurso</strong>.</p><p>Para isso, o banco de dados deve ter algumas propriedades:</p><ul><li>Fonte de dados</li><li>Tem uma relação com os dados </li><li>Os usuários estão constantemente interessados no conteúdo manipulados.</li></ul><p><strong>O que é um sistema gerenciador de banco de dados?</strong></p><ul><li>É um sistema computado que permite ao usuário acessar e manipular dados armazenados em um banco de dados.</li><li>Ele facilita o uso em geral:<ul><li>Definição</li><li>Construção</li><li>Manipulação</li><li>Compartilhamento</li></ul></li><li>Interação entre usuários e aplicação</li></ul><p><strong>Qual a diferença entre um banco de dados e um sistema de gerenciamento de banco de dados (SGBD)?</strong></p><ul><li>Banco de dados é onde armazena os dados, é o repositório das informações.</li><li>O SGBD é o sistema que permite acessar e manipular os dados, onde fica as restrições.</li></ul><p><strong>DDL</strong> - Construção e Definição</p><ul><li>Create</li><li>Alter</li><li>Drop</li></ul><p><strong>DML</strong> - Manipulações Possíveis</p><ul><li>Select</li><li>Update</li><li>Insert</li><li>Delete</li></ul><p><strong>Conceitos Gerais</strong></p><ul><li>Entidade<ul><li>Representa um conjunto de dados</li><li>Representa um conceito do mundo real<ul><li>Alunos</li><li>Professores</li><li>Matérias</li></ul></li></ul></li><li>Atributos<ul><li>São os dados das entidades<ul><li>Nomes</li><li>Salario</li><li>Datas</li></ul></li></ul></li><li>Relacionamento<ul><li>Como duas entidades estão conectadas<ul><li>Funcionário trabalha em um projeto</li><li>Aluno esta em uma turma</li></ul></li></ul></li><li>Modelo entidade relacionamento<ul><li>Um modelo conceitual de alto nível para representar os dados do BD</li></ul></li><li>Esquema de banco de dados<ul><li>Descrição de um banco de dados</li></ul></li><li>Diagrama de esquema<ul><li>É a representação de um esquema de banco de dados</li></ul></li><li>Modelo de banco de dados<ul><li>Forma de se organizar os dados em um banco de dados</li></ul></li></ul><p>A aula seguiu com uma modelagem de banco de dados, utilizando o <a href="https://staruml.io/" target="_blank" rel="noopener noreferrer">StarUML</a>.</p><p>A aula tem o intervalo para meio dia, e voltamos as 13:30, continuando vendo o assunto de modelagem de banco no StarUML.</p><p>Após isso, o professor passou uma atividade e separou a turma em grupos.</p><p><img loading="lazy" alt="Alunos" src="/assets/images/Alunos-208f0cb5d02dd2d399808bb14e7510c2.jpg" width="1989" height="615" class="img_ev3q"></p><p>O meu grupo foi o Grupo3, e nós geramos esse modelo aqui:</p><p><img loading="lazy" alt="Alunos" src="/assets/images/Grupo-03-a45897d031b943176b2f5196629f7996.png" width="673" height="510" class="img_ev3q">
Download do projeto: <a target="_blank" href="/assets/files/Grupo-03-b06a407f4f959d7e0d402f3901bfcbc9.zip">Grupo-03.mdj</a></p><p>Após falarmos do trabalho, onde cada grupo apresentou o que foi feito, o professor começou a falar sobre SQL.
Começou falando sobre sua estrutura, sobre seus tipos, a estrutura.</p><p>Pelo <a href="https://staruml.io/" target="_blank" rel="noopener noreferrer">StarUML</a> podemos gerar o SQL, no caso esse arquivo foi gerado aqui: <a target="_blank" href="/assets/files/Grupo-03-5e39183f0eb980bb1e13b5b1619bfdbd.sql">.SQL</a></p><p>Geramos as tabelas e fizemos algumas atividades na pratica já com SQL.</p><p>Isso tudo foi visto na primeira aula.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="31/07/2021" term="31/07/2021"/>
        <category label="07/2021" term="07/2021"/>
        <category label="2021" term="2021"/>
        <category label="fernando" term="fernando"/>
        <category label="banco de dados" term="banco de dados"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#8 - Angular]]></title>
        <id>8</id>
        <link href="https://pos-unipar.github.io/blog/8"/>
        <updated>2021-06-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[26/06/2021 - Aula 4 de Angular (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>26/06/2021 - Aula 4 de Angular</strong> (Remoto)</p><p>A ultima aula de Angular começa as 08:00, com o professor <a href="/professores/jean">Jean</a> perguntando sobre o trabalho com o pessoal, vendo se estão com dúvidas, se já começaram a fazer ou não.</p><p>Por volta das 08:25 é iniciado a apresentação do conteúdo, vai ser visto o <strong>Angular Material</strong> nesta aula. para isso vamos utilizar o projeto que está disponível já em <a href="https://github.com/pos-unipar/app-unipar4" target="_blank" rel="noopener noreferrer">Github</a>.</p><p>O material que o professor utilizou foi esse aqui em <a target="_blank" href="/assets/files/angular-aula4-910065fe0d3c4c99abe804a448a2aa0f.pdf">.PDF</a>.</p><p>Começamos então a atuar com a alteração de um formulário, mudando ele para utilizar os componentes que são do <strong>Angular Material</strong>, aplicando para o cliente.</p><p>Depois do professor explicar cada componente, e como utilizar ele, é solicitado para os alunos fazerem para a componente de usuário, tanto para a tela quanto para o modal.</p><p>Após validar a atividade, começamos a ver a parte de animações, como criar ela, configurar, utilizar, etc. </p><p>Professor também mostra como podemos fazer o deploy do projeto utilizando Docker, e explica como fazer esse processo utilizando o projeto atual.</p><p>Com isso terminamos o que foi visto antes do almoço.</p><p>Durante a tarde, o professor comentou sobre o trabalho, passou item a item do que tem ser feito, e aproveitou para tirar dúvidas do pessoal.</p><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Trabalho</h5></div><div class="admonition-content"><p>As informações do trabalho estão na pagina da disciplina.<br>
<a href="/docs/angular#trabalho-final"><strong>Link</strong></a></p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="26/06/2021" term="26/06/2021"/>
        <category label="06/2021" term="06/2021"/>
        <category label="2021" term="2021"/>
        <category label="jean" term="jean"/>
        <category label="angular" term="angular"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#7 - Angular]]></title>
        <id>7</id>
        <link href="https://pos-unipar.github.io/blog/7"/>
        <updated>2021-06-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[12/06/2021 - Aula 3 de Angular (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>12/06/2021 - Aula 3 de Angular</strong> (Remoto)</p><p>Começamos a terceira aula as 08:10, com o professor <a href="/professores/jean">Jean</a> revisando uma atividade que ele tinha pedido, que era a implementação de clientes, ele atualizou o projeto e está disponível já em <a href="https://github.com/pos-unipar/app-unipar2" target="_blank" rel="noopener noreferrer">Github</a>.</p><p>O material que o professor utilizou foi esse aqui em <a target="_blank" href="/assets/files/angular-aula3-7a8276b4eddf6f77469d0d8b67ca343c.pdf">.PDF</a>.</p><p>Começamos a aula vendo o construtor "pipe" (|), que serve para formatar valores de acordo com o que você passar. Vimos também como criar um validador personalizado para validar campos de CPF e CNPJ.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># Instalar uma biblioteca para ajudar na formatação e validação dos campos</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">install</span><span class="token plain"> angular2-text-mask --save</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">install</span><span class="token plain"> ng2-currency-mask --save</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Depois de importar as bibliotecas, foi alterado o arquivo do cliente e o modal do cliente, para inserir as validações.</p><p>Fizemos um intervalo as 10h, e depois demos continuidade na aula vendo gráficos, utilizando outra biblioteca</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># Instalar uma biblioteca para ajudar nos gráficos</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">install</span><span class="token plain"> ng2-charts@2.4.2 --save</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">install</span><span class="token plain"> chart.js@2.9.3 --save</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Depois do almoço, continuamos trabalhando com a parte de gráfico, criamos um componente pra ele, o que ajudou a reduzir o código da tela Home.</p><p>Por volta das 15h fizemos um intervalo e na volta começamos a ver um pouco sobre testes unitários, mas o professor comentou que na próxima aula vai ser aprofundado no assunto.</p><p>Começamos a ver então a função "Drag and Drop", utilizando um plugin</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># Instalar uma biblioteca para ajudar nos gráficos</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">install</span><span class="token plain"> ng2-dnd@5.0.2 --save</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Implementamos em um exemplo de lista de produtos, com ações disparadas ao soltar. Trabalhamos também com componente de selecionar item com um dropdown, vendo vários recursos e como utilizar eles.</p><p>Ouve algumas dúvidas de alunos, e foi discutido os assuntos, como linguagem melhor para se trabalhar, se precisa fazer o backend em Javascrip, se consigo fazer toda a aplicação só com Angular, etc etc.</p><p>Foi conversado um pouco sobre o trabalho que vai ser passado, mas professor tem qeu verificar uns detalhes ainda antes de passar para nós.</p><p>Com isso terminamos a aula de hoje.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="12/06/2021" term="12/06/2021"/>
        <category label="06/2021" term="06/2021"/>
        <category label="2021" term="2021"/>
        <category label="jean" term="jean"/>
        <category label="angular" term="angular"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#6 - Angular]]></title>
        <id>6</id>
        <link href="https://pos-unipar.github.io/blog/6"/>
        <updated>2021-05-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[29/05/2021 - Aula 2 de Angular (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>29/05/2021 - Aula 2 de Angular</strong> (Presencial)</p><p>Começamos a segunda aula as 08:20, com o professor <a href="/professores/jean">Jean</a> mostrando as alterações que ele fez no projeto da aula passada, da qual ele disponibilizou por meio do <a href="https://github.com/pos-unipar/app-unipar" target="_blank" rel="noopener noreferrer">Github</a>.
Foi adicionado um component <strong>ngx-toastr</strong> para ter notificações mais elegantes no projeto.</p><p>Em seguida professor passou alguns códigos, e pediu para colocarmos nas seguintes pastas:</p><ul><li><a target="_blank" href="/assets/files/shared-d3b117bc205f801ed69545d80b90647b.zip">.ZIP</a> - Arquivo pra baixar</li><li>src/app/shared - Destino para colocar os arquivos.</li><li><strong>OBS: </strong> A pasta <em>helper</em> deve ser movida para fora da pasta shared, em <strong>src/app</strong></li></ul><p>Esses novos arquivos são um <em>controller</em> para poder validar os dados, só adicionar ele, que ele faz a validação.</p><p>As 10:15 o professor mostra o que esses arquivos que passou faz, adicionamos no método salvar, e ele valida todos os campos de uma só vez.</p><p>As 10:40 começamos a ver sobre os serviços, para poder salvar um usuário, utilizando o padrão <em>observer</em> e <em>subscriber</em>.</p><p>As 11:50 o professor fala que vamos trabalhar a tarde com outro projeto, ele já disponibilizou no <a href="https://github.com/pos-unipar/app-unipar2" target="_blank" rel="noopener noreferrer">Github</a>.</p><p>Após o almoço, a aula começou as 13:40 com a chamada, e em seguida professor mostra o projeto novo, falando a parte dos <strong>mocks</strong> de dados. </p><p>Em seguida, continua falando de todo o projeto, mostrando todo o processo de login, de como é feito a comunicação da senha, o que acontece quando é submetido o request de login e senha.</p><p>AS 15:00 o professor passa uma atividade para criar um formulário para o usuário dentro do modal, para poder inserir um novo, e para poder editar um já existente.</p><p>Professor passou de mesa em mesa tirando dúvidas e ajudando quem precisava.</p><p>Com isso terminamos a aula de hoje.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="29/05/2021" term="29/05/2021"/>
        <category label="05/2021" term="05/2021"/>
        <category label="2021" term="2021"/>
        <category label="jean" term="jean"/>
        <category label="angular" term="angular"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#5 - Angular]]></title>
        <id>5</id>
        <link href="https://pos-unipar.github.io/blog/5"/>
        <updated>2021-05-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[15/05/2021 - Aula 1 de Angular (Presencial)]]></summary>
        <content type="html"><![CDATA[<p><strong>15/05/2021 - Aula 1 de Angular</strong> (Presencial)</p><p>Professor <a href="/professores/geferson">Geferson</a> fez a apresentação do professor <a href="/professores/jean">Jean</a>, visto que é a primeira aula que temos com ele. Em seguida foi passado alguns avisos sobre os computadores e acessos.</p><p>Logo em seguida o professor perguntou sobre os acadêmicos, para saber o nível de cada um, para saber se todos já tem experiencia com programação. Após o momento de introdução, ele apresenta um pouco sobre si, e damos inicio a aula.</p><p>O material que o professor utilizou foi esse aqui em <a target="_blank" href="/assets/files/angular-0e4427701e9798b062b601fa4101f0e2.pdf">.PDF</a>.</p><p>Professor começa a aula falando da parte histórica do Angular, que atualmente esta na <strong>versão 12</strong>. </p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>Site oficial: <a href="https://angular.io/" target="_blank" rel="noopener noreferrer">https://angular.io/</a></p></div></div><p>O Angular utiliza componentes para sua estrutura, como controle de rotas, servições, etc. Já para a parte de interface, todos os componentes que comecem com <strong>ng</strong> pertencem ao Angular, dentre eles temos componentes lógicos, como <strong>ngIf</strong>, ou laços de repetição, como o <strong>ngFor</strong>.</p><p>Começamos com a instalação de alguns programas como o <a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">Node.js</a>. O professor recomenda a utilização de um gerenciador de versão do Node, o <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener noreferrer">NVM</a>.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># Verificar vesao do Node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">node</span><span class="token plain"> -v</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As 09:30 a aula continuou com a instalação do <a href="https://angular.io/cli" target="_blank" rel="noopener noreferrer">Angular</a>.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># Verificar do Angular</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">install</span><span class="token plain"> -g @angular/cli</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ng version</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As 10:00 a aula continuou com a criação de um novo projeto.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># Verificar do Angular</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ng new app-unipar</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># ? Would you like to add Angular routing? (y/N) </span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">n</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic"># ? Which stylesheet format would you like to use? (Use arrow keys)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">SCSS</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As 10:25 o professor continuou a apresentar a aula, explicando a estrutura do projeto angular recém criado. É aberto o arquivo <strong>angular.json</strong> e explicado o que significa cada item do arquivo, como onde se coloca novos assets, estilos ou bibliotecas. Depois vimos o arquivo <strong>package.json</strong>, que contem mais configurações para o projeto. Continuamos vendo outros detalhes, como arquivo de ambientes, o <strong>/src/environments</strong>, que você coloca configurações para seu ambiente, como ambiente de teste ou ambiente em produção.</p><p>Depois de mostrar os arquivos, foi mostrado o componente inicial <strong>app-root</strong>, como ele está estruturado, onde está o .HTML, o .SCSS e os componentes desse modulo.</p><p>Depois de vermos um pouco o projeto, e alteramos o arquivo inicial, vamos começãr a mexer com código. Para isso vamos instalar alguns componentes.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> i bootstrap --save</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token function" style="color:rgb(130, 170, 255)">npm</span><span class="token plain"> i @ng-bootstrap/ng-bootstrap --save</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>Site oficial: <a href="https://ng-bootstrap.github.io/" target="_blank" rel="noopener noreferrer">https://ng-bootstrap.github.io/</a></p></div></div><p>Depois de instalar, começamos a utilizar o Bootstrap para formatar um página, mas não terminamos antes do almoço está atividade.</p><p>A aula começou a tarde as 13:45, dando continuidade a atividade anterior, que é um TODO, implementamos os metodos de adicionar e remover um TODO.</p><p>Professor pediu para gerarmos um novo componente, utilizamos o código abaixo.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ng generate component table-todo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Após criar o componente, migramos de local ele, para aprender a como trabalhar com componentes nossos. Além disso, começamos a utilizar <strong>@Input</strong> e <strong>Output</strong> para modificar atributos de dentro de nosso componente, isso tudo até as 16h.</p><p>Agora vamos criar um novo componentes para treinarmos a criação de um formulário de cadastro de usuária.</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ng generate component form-usuario</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As 17:30 terminamos um componente de validação, que ao digitar um campo que não atende aos requisitos, ele apresenta o erro.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="15/05/2021" term="15/05/2021"/>
        <category label="05/2021" term="05/2021"/>
        <category label="2021" term="2021"/>
        <category label="jean" term="jean"/>
        <category label="angular" term="angular"/>
        <category label="presencial" term="presencial"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#4 - HTML5, CSS3 e ES6]]></title>
        <id>4</id>
        <link href="https://pos-unipar.github.io/blog/4"/>
        <updated>2021-04-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[24/04/2021 - Aula 3 de HTML5, CSS3 e ES6 (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>24/04/2021 - Aula 3 de HTML5, CSS3 e ES6</strong> (Remoto)</p><p>Professor <a href="/professores/jemerson">Jemerson</a> ministrou a terceira aula da matéria de <a href="/docs/html-css-js">HTML5, CSS3 e Javascript</a>, começou fazendo uma revisão sobre a <a href="/blog/3">aula anterior</a> e mostrando o que vai ser visto pra aula de hoje. Comentou que hoje vai ter trabalho a ser feito, visto que é a ultima aula dessa matéria.</p><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Trabalho</h5></div><div class="admonition-content"><p>As informações do trabalho estão na pagina da disciplina.<br>
<a href="/docs/html-css-js#trabalho-final"><strong>Link</strong></a></p></div></div><p>Continuando a aula anterior, a partir da página 47, professor se aprofundou em Jquery, utilizou o material em <a target="_blank" href="/assets/files/aula-02-f7c6a1ceb251f2c96d891a3bb17790ee.pdf">.PDF</a>, professor comenta que vamos fazer um exemplo utilizando o formulário feito na aula <a href="/docs/html-css-js#atividade-2">atividade 2</a> do qual os itens vão ser salvos numa tabela que vai manipulada pelo DOM, utilizando Jquery.</p><p>Foi apresentado métodos de manipulação do DOM, como adicionar ações a elementos, manipular dados do elemento, adicionar novos atributos ou retornar o valor que ele tem e até mesmo manipular informações visuais, como adicionar CSS ou remover CSS.</p><p>A aula seguiu assim até umas 10:10, que foi quando foi feito um intervalo. </p><p>Voltando do intervalo as 10:30, deu continuidade na aula com uma <a href="/docs/html-css-js#atividade-5">atividade</a>, para treinar o que foi visto até então. Após um tempo, o professor fez a atividade na aula com todos para explicar uma das possíveis soluções.</p><p>Tudo isso foi visto antes do almoço, até as 12:00. A aula voltou as 13:20</p><p>A aula continuou falando sobre o ES6 (ECMAScript), falando sobre o escopo que as variáveis tem nessa versão, o <strong>let</strong> e o <strong>var</strong>. É recomendado utilizar sempre <strong>let</strong>, visto que ele só funciona dentro do escopo em que ele esta declarado.</p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Exemplos</summary><div><div class="collapsibleContent_i85q"><p></p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">Exemplo 1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> x </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// x pode ser utilizado aqui</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> y </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// y não pode ser utilizado aqui</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">Exemplo 2</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> x </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// x = 10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> x </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// x = 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// x = 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> y </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// y = 10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> y </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// y = 2;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// y = 10</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p></p></div></div></details><br><p>Nessa versão também tem o suporte a <strong>Arrow Functions</strong>, uma forma mais simples de declarar uma função.</p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Exemplos</summary><div><div class="collapsibleContent_i85q"><p></p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">Exemplo</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// ES5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(130, 170, 255)">x</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">function</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">x</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> y</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword control-flow" style="font-style:italic">return</span><span class="token plain"> x </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// ES6</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(130, 170, 255)">x</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">x</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter">y</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> x </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain"> y</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p></p></div></div></details><br><p>Podemos trabalhar com listas de forma melhor, utilizando o <strong>for/of</strong>, ele vai passando elemento por elemento, e salvando em uma variável para utilizar dentro do seu código.</p><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Exemplos</summary><div><div class="collapsibleContent_i85q"><p></p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockTitle_Ktv7">Exemplo</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> cars </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token string" style="color:rgb(195, 232, 141)">"BMW"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Volvo"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"Mini"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword control-flow" style="font-style:italic">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">x </span><span class="token keyword" style="font-style:italic">of</span><span class="token plain"> cars</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token dom variable" style="color:rgb(191, 199, 213)">document</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">write</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">x </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"&lt;br &gt;"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p></p></div></div></details><br><p>Foi adicionado também o suporte a <strong>classes</strong>, para trabalhar com orientação a objetos. <strong>Promises</strong> também foram adicionadas para poder se trabalhar de forma assíncrona. Muitas outras novidades foram adicionadas, a lista completa pode ser vista em <a href="https://www.w3schools.com/js/js_es6.asp" target="_blank" rel="noopener noreferrer">https://www.w3schools.com/js/js_es6.asp</a>.</p><p>Após falar dos novos recursos, o professor fez um exemplo utilizando <strong>map</strong>, <strong>reduce</strong> e <strong>filter</strong> para mostrar para a turma como que funciona e possíveis utilizações.</p><p>Com isso terminamos o material da aula 02 e vamos dar inicio a aula 03.</p><p>O material dessa aula está no <a target="_blank" href="/assets/files/aula-03-eb9aa1057f762163160cedfcd16e8fe8.pdf">.PDF</a>, e começamos vendo recursos da API HTML 5, recursos que são chamados, que os navegadores fornecem recursos para nossa aplicação, como a utilização da localização, microfone ou câmera do dispositivo. Uma lista completa pode ser vista <a href="https://developer.mozilla.org/en-US/docs/Web/API" target="_blank" rel="noopener noreferrer">aqui</a>.</p><p>O <strong>Drag/Drop</strong> é um desses recursos que a API do HTML 5 fornece, para poder arrastar arquivos para dentro da aplicação. Professor fez um exemplo utilizando a <a href="/docs/html-css-js#atividade-1">atividade 1</a>, adicionando a opção de mover as noticias para outro local. </p><p>O professor comentou que podemos salvar dados no navegador, dentro de um limite que varia de acordo com cada navegador, mas podemos utilizar o <strong>Web Storage</strong>, tanto para salvar dados, como informações de sessão, a diferença é que os dados de sessão são perdidos quando o navegador é fechado.</p><p>O professor também fez um exemplo de armazenamento utilizando local storage e a <a href="/docs/html-css-js#atividade-5">atividade</a> feita anterior.</p><p>AS 16h o professor fez um intervalo de 15 minutos, e após voltar, continuou com a solução do exemplo de local storage.</p><p>Após o exemplo, foi falado de acessibilidade, responsividade e de performance dos site, alguns exemplos são:</p><ul><li><a href="https://www.w3.org/Translations/WCAG20-pt-br/" target="_blank" rel="noopener noreferrer">https://www.w3.org/Translations/WCAG20-pt-br/</a></li><li><a href="https://gtmetrix.com/" target="_blank" rel="noopener noreferrer">GTmetrix</a></li><li><a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener noreferrer">Google PageSpeed Inights</a></li><li><a href="https://search.google.com/test/mobile-friendly" target="_blank" rel="noopener noreferrer">Google Mobile Friendly</a></li><li><a href="https://www.responsinator.com/" target="_blank" rel="noopener noreferrer">Responsinator</a></li></ul><p>Além de ferramentas, foi apresentado sites de templates, que ajudam a dar o ponta pé inicial, dentre eles temos:</p><ul><li><a href="https://startbootstrap.com/" target="_blank" rel="noopener noreferrer">https://startbootstrap.com/</a></li><li><a href="https://coreui.io/" target="_blank" rel="noopener noreferrer">https://coreui.io/</a></li><li><a href="https://themeforest.net/category/site-templates/admin-templates" target="_blank" rel="noopener noreferrer">https://themeforest.net/category/site-templates/admin-templates</a></li></ul><p>Com isso foi finalizado a aula.</p><div class="admonition admonition-warning alert alert--danger"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"></path></svg></span>Trabalho</h5></div><div class="admonition-content"><p>As informações do trabalho estão na pagina da disciplina.<br>
<a href="/docs/html-css-js#trabalho-final"><strong>Link</strong></a></p></div></div><p>Antes de terminar, professor comenta do trabalho, que tem data de entrega dia 08/05/2021.
O trabalho tem que atender ao seguintes requisitos:</p><ul><li>Estilizar a página de forma livre utilizando css, sass e/ou Bootstrap; (60%)</li><li>Utilizar HTML5 API Drag/Drop fazendo com que os produtos da seção produtos possa ser movida para seção carrinho. (+20%)</li><li>Utilizar JavaScript (com ou sem JQuery) fazendo com que ao alterar a quantidade dos produtos, a tabela contendo informações de total de tens e valor total sejam atualizadas com os dados correspondentes;</li></ul>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="24/04/2021" term="24/04/2021"/>
        <category label="04/2021" term="04/2021"/>
        <category label="2021" term="2021"/>
        <category label="jemerson" term="jemerson"/>
        <category label="html" term="html"/>
        <category label="css" term="css"/>
        <category label="js" term="js"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#3 - HTML5, CSS3 e ES6]]></title>
        <id>3</id>
        <link href="https://pos-unipar.github.io/blog/3"/>
        <updated>2021-04-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[10/04/2021 - Aula 2 de HTML5, CSS3 e ES6 (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>10/04/2021 - Aula 2 de HTML5, CSS3 e ES6</strong> (Remoto)</p><p>Professor <a href="/professores/jemerson">Jemerson</a> ministrou a segunda aula da matéria de <a href="/docs/html-css-js">HTML5, CSS3 e Javascript</a>, começou fazendo uma revisão sobre a <a href="/blog/2">aula anterior</a> e mostrando o que vai ser visto pra aula de hoje.</p><p>Continuou utilizando o material em <a target="_blank" href="/assets/files/aula-01-f6228edd611b789babdb89e5e5b66421.pdf">.PDF</a>, a partir da página 49. Este material pode ter algumas diferenças em relação ao material da aula anterior pois o professor fez alguns ajustes e correções.</p><p>A aula continuou o material da primeira aula, na parte de CSS e seus tipos de seletores, classes, elementos, inline, etc.</p><p>Professor mandou um link para um repositório no <a href="https://github.com/jfnandopr/jfnandopr-pos-unipar-html-css-js-atividade.git" target="_blank" rel="noopener noreferrer">GitHub</a> e utilizando este projeto, o professor foi fazendo durante a aula a estilização do conteúdo com CSS e explicando o que cada alteração iria impactar.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Informação</h5></div><div class="admonition-content"><p>Foi feito uma copia(<em>fork</em>) do projeto que o professor apresentou, está disponível no Github no seguinte link:<br>
<a href="https://github.com/pos-unipar/jfnandopr-pos-unipar-html-css-js-atividade" target="_blank" rel="noopener noreferrer">https://github.com/pos-unipar/</a>.</p><p>Um <a target="_blank" href="/assets/files/jfnandopr-pos-unipar-html-css-js-atividade-main-v1-1f23a271cbe0f4f672ab3defb2b0b828.zip">.zip</a> foi gerado, do projeto no commit <a href="https://github.com/pos-unipar/jfnandopr-pos-unipar-html-css-js-atividade/commit/92aaa8d7b3795e0b8baa443034bda009e98bf945" target="_blank" rel="noopener noreferrer"><em>92aaa8d</em></a>, que é o commit em que estava o projeto na aula de hoje.</p></div></div><p>Foi comentado sobre o <a href="https://necolas.github.io/normalize.css/" target="_blank" rel="noopener noreferrer">normalize.css</a>, um projeto que contem formatações CSS para sobrescrever configurações de navegadores, o que pode garantir uma maior compatibilidade com diversos navegadores.</p><p>Entrando na parte de fontes, foi apresentado como importamos fontes, que da para trabalhar elas de forma externa ou interna, de que o sistema operacional precisa ter a fonte, caso contrario, uma fonte padrão vai ser utilizada.</p><ul><li><a href="https://www.w3schools.com/css/css_font_google.asp" target="_blank" rel="noopener noreferrer">https://www.w3schools.com/css/css_font_google.asp</a></li><li><a href="https://fonts.google.com/?preview.text_type=custom" target="_blank" rel="noopener noreferrer">https://fonts.google.com/?preview.text_type=custom</a></li></ul><p>Foi falado de outros componentes como <em>Media Queries</em>, <em>Box model</em>, <em>Motores de renderização</em>, tudo isso antes da hora do almoço.</p><p>Após o almoço, professor pediu para fazer a atividade da página 84 do <a target="_blank" href="/assets/files/aula-01-f6228edd611b789babdb89e5e5b66421.pdf">.PDF</a>, fazer essa atividade utilizando o projeto que o professor passou, já com as alterações que ele fez durante a aula de hoje, utilizando os arquivos da pasta <strong>exemplo</strong>.</p><p>Depois de um tempo para o pessoal tentar fazer, professor começou a fazer a atividade e explicar cada alteração. </p><p>Terminando essa parte da atividade, o professor começa a falar de <em>frameworks front-ent</em>:</p><ul><li><a href="https://purecss.io/" target="_blank" rel="noopener noreferrer">https://purecss.io/</a></li><li><a href="https://materializecss.com/" target="_blank" rel="noopener noreferrer">https://materializecss.com/</a></li><li><a href="https://get.foundazon/" target="_blank" rel="noopener noreferrer">https://get.foundazon/</a></li><li><a href="https://getbootstrap.com/" target="_blank" rel="noopener noreferrer">https://getbootstrap.com/</a></li></ul><p>Além de ver alguns dos principais <em>front-ends</em>, utilizamos o <a href="https://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap</a> para modificar a pasta <strong>atividade</strong>, aplicando a versão 4.6 do <em>framework</em>. Após esse processo, professor fez o envio dessa alteração para o Github.</p><p>Com tudo isso, terminamos o material que era da aula 01 do dia <a href="/blog/2">27/03/2021</a>.</p><hr><p>Agora vamos começar o conteúdo da aula de hoje utilizando o <a target="_blank" href="/assets/files/aula-02-832a464571ec8b28ab7ce146d987f09d.pdf">.PDF</a>, começando vendo sobre <a href="https://sass-lang.com/" target="_blank" rel="noopener noreferrer">SASS</a>.</p><p>No conteúdo de SASS, o professor mostra o que é, como fazer a instalação e como trabalhar com ele. Começa apresentando as formas de se criar um arquivo .sass, que podemos trabalhar com variáveis, com alinhamento das propriedades, <em>@Mixin</em>, <em>@extend</em>, <em>@import</em> e <em>Compass</em>.</p><p>Em sequencia, é solicitado para instalarmos a extensão <a href="https://marketplace.visualstudio.com/items?itemName=glenn2223.live-sass" target="_blank" rel="noopener noreferrer">Live Sass Compiler</a> no Visual Studio Code. Depois de instalado, foi solicitado para adicionar a seguinte configuração no Visual Studio Code. Vale notar que a extensão comentada tem dois plugins, instale a do link. </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">"liveSassCompile.settings.formats": [</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        "format": "expanded",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        "extensionName": ".css",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        "savePath": "~/../css"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">],</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Após essas configurações, migramos o .css da pasta <strong>exemplo</strong> do projeto do professor para ser um .scss e ver como ele se comporta. O plugin vai gerando o arquivo .css conforme vai sendo alterado o .scss.</p><p>Terminando esse assunto, entramos em JavaScript, vendo o que é, como utilizar ele na aplicação, como chamar, sua sequencia de chamada, o que pode ser feito, quais elementos consegue manipular, etc.</p><p>Além de JavaScript, foi visto JQuery, que é uma biblioteca em <em>javascript</em> para facilitar ações que queira fazer com javascript, como a seleção de elementos, que em javascript seria muito trabalhoso.</p><p>Com isso terminamos a segunda aula, conseguindo terminar tudo qeu tinha que ser visto para hoje.</p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="10/04/2021" term="10/04/2021"/>
        <category label="04/2021" term="04/2021"/>
        <category label="2021" term="2021"/>
        <category label="jemerson" term="jemerson"/>
        <category label="html" term="html"/>
        <category label="css" term="css"/>
        <category label="js" term="js"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#2 - HTML5, CSS3 e ES6]]></title>
        <id>2</id>
        <link href="https://pos-unipar.github.io/blog/2"/>
        <updated>2021-03-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[27/03/2021 - Aula 1 de HTML5, CSS3 e ES6 (Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>27/03/2021 - Aula 1 de HTML5, CSS3 e ES6</strong> (Remoto)</p><p>Professor <a href="/professores/jemerson">Jemerson</a> ministrou a primeira matéria do curso, a de <a href="/docs/html-css-js">HTML5, CSS3 e Javascript</a>. Durante a primeira aula, foi realizado apresentações, tanto do professor como dos alunos. Em seguida o conteúdo começou a ser apresentado utilizando utilizando o material em <a target="_blank" href="/assets/files/aula-01-06967eca6f747903a849c09099c8fd8c.pdf">.PDF</a>.</p><p>Após o almoço, iniciou a aula na pratica, professor tinha solicitado para instalar o Visual Studio Code anteriormente e pediu para instalar a seguinte extensão:</p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=SimonSiefke.html-extension-pack" target="_blank" rel="noopener noreferrer">Html Extension Pack</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=techer.open-in-browser" target="_blank" rel="noopener noreferrer">Open in browser</a></li></ul><p>Começamos dai a ver na pratica as tags HTML e suas funções e em seguida o professor Jemerson passa uma atividade para ser feito.</p><p>Após 20 minutos, ele volta e começa a explicar para fazer o upload da atividade para o Github, ele explica como criar um projeto, e os passos iniciais para poder enviar o projeto da nossa maquina para o servidor do github. </p><p>Após essa atividade, professor mostrou algumas ferramentas para criar sites, um template que ajuda com recursos e ferramentas:</p><ul><li><strong>Modernizr</strong>: É uma pequena biblioteca Javascript que identifica a disponibilidade das novas
características do HTML5 e CSS3 nos browsers. <a href="https://modernizr.com/" target="_blank" rel="noopener noreferrer">https://modernizr.com/</a></li><li><strong>HTML5 Boilerplate</strong>: É um conjunto de arquivos de código aberto, disponível para download que
fornecem uma base para criação de qualquer site - <a href="https://html5boilerplate.com" target="_blank" rel="noopener noreferrer">https://html5boilerplate.com</a></li></ul><p>Foi apresentado também algumas ferramentas para verificar compatibilidade com html5:</p><ul><li><a href="https://caniuse.com/?search=html5" target="_blank" rel="noopener noreferrer">https://caniuse.com/?search=html5</a></li><li><a href="https://html5test.com/results/desktop.html" target="_blank" rel="noopener noreferrer">https://html5test.com/results/desktop.html</a></li><li><a href="https://mobilehtml5.org/" target="_blank" rel="noopener noreferrer">https://mobilehtml5.org/</a></li><li><a href="https://gs.statcounter.com/" target="_blank" rel="noopener noreferrer">https://gs.statcounter.com/</a></li></ul><p>Seguindo o conteúdo, começamos a ver os tipos de inputs existentes no HTML5</p><ul><li><a href="https://www.w3schools.com/html/html_form_input_types.asp" target="_blank" rel="noopener noreferrer">https://www.w3schools.com/html/html_form_input_types.asp</a></li></ul><p>Professor iniciou também a parte de CSS, comentando o que é, mas não se aprofundou nos seus recursos.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Nota</h5></div><div class="admonition-content"><p>Para o primeiro dia de aula, não se foi concluído o objetivo, o material em PDF tem 81 paginas e chegamos somente até a página 47.</p></div></div>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="27/03/2021" term="27/03/2021"/>
        <category label="03/2021" term="03/2021"/>
        <category label="2021" term="2021"/>
        <category label="jemerson" term="jemerson"/>
        <category label="html" term="html"/>
        <category label="css" term="css"/>
        <category label="js" term="js"/>
        <category label="remoto" term="remoto"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#1 - Aula introdutoria]]></title>
        <id>1</id>
        <link href="https://pos-unipar.github.io/blog/1"/>
        <updated>2021-03-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[13/03/2021 - Aula introdutória  (Presencial/Remoto)]]></summary>
        <content type="html"><![CDATA[<p><strong>13/03/2021 - Aula introdutória</strong>  (Presencial/Remoto)</p><p>Hoje foi a primeira aula da pós, mas não teve muita coisa.
A situação atual é que a pandemia está piorando, e está aumentando o numero de casos de COVID-19 na cidade.</p><p>Com isso parte dos alunos não se sentiu confortável para ir no primeiro dia, no qual o professor fez duas reuniões, uma aconteceu presencialmente na Unipar pela manha e no período da tarde teve outra reunião utilizando o Meet.</p><p>Essas reuniões foram utilizadas para apresentar informações gerais sobre a pós, matérias, calendário, professores e a situação atual da pandemia, o que fazer caso tiver algum decreto proibindo as aulas.</p><p>No geral foi informações do andamento e conhecer alguns dos alunos.</p><p><img loading="lazy" alt="Imagem da reunião" src="/assets/images/aula-6c959df9e5962f50c6ab1907a9397b44.jpeg" width="1599" height="899" class="img_ev3q"></p>]]></content>
        <author>
            <name>Lucas Elias Baccan</name>
            <uri>https://github.com/lucasbaccan</uri>
        </author>
        <category label="blog" term="blog"/>
        <category label="unipar" term="unipar"/>
        <category label="13/03/2021" term="13/03/2021"/>
        <category label="03/2021" term="03/2021"/>
        <category label="2021" term="2021"/>
        <category label="geferson" term="geferson"/>
    </entry>
</feed>